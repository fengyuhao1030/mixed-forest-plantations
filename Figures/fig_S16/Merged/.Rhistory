plotsizeCIPolygon$X[count] <- plotsizeLine$X[i]
plotsizeCIPolygon$Y[count] <- plotsizeLine$Upper[i]
count <- count + 1
}
for(i in seq(nrow(plotsizeLine),1,-1)){
plotsizeCIPolygon$X[count] <- plotsizeLine$X[i]
plotsizeCIPolygon$Y[count] <- plotsizeLine$Lower[i]
count <- count + 1
}
plotsizeCIPolygon$X[count] <- plotsizeLine$X[1]
plotsizeCIPolygon$Y[count] <- plotsizeLine$Upper[1]
# Part 1.3: Draw
fig_S16a <- ggplot()+
geom_point(newDataMatrix,mapping = aes(x = PlotSize,y = yi),
shape = 20,stroke = 0,color = '#666666',size = newDataMatrix$BubbleSize,alpha = 0.4)+
geom_hline(yintercept = 0,size = 0.3,color = '#000000',linetype = 'dashed')+
geom_line(data = plotsizeLine,mapping = aes(x = X,y = Y),size = 0.5,color = CMYKtoRGB(0.84,0.67,0,0),linetype = 'dashed')+
geom_polygon(data = plotsizeCIPolygon,mapping = aes(x = X,y = Y),size = 0.5,fill = CMYKtoRGB(0.84,0.67,0,0),alpha = 0.3)+
scale_x_continuous(limits = c(min(newDataMatrix$PlotSize),max(newDataMatrix$PlotSize)),breaks = seq(0,2000,1000),labels = c('0','1000','2000'),expand = expansion(mult = 0.08))+
scale_y_continuous(limits = c(-0.6,0.6),breaks = seq(-0.6,0.6,0.3),labels = c('-0.6','-0.3','0','0.3','0.6'),expand = c(0,0))+
theme_custom()
##==== Part 1: Height (Species) ====##
##==== Part 2: DBH (Species) ====##
load('Data_DBH_PlotSize_Add_Species.R')
selectIDs <- which(!is.na(dataMatrix$PlotSize))
dataMatrix <- dataMatrix[selectIDs,]
dataMatrix$Level4 <- as.factor(paste(dataMatrix$Lat,dataMatrix$Lon))
dataMatrix$Level3 <- as.factor(paste(dataMatrix$Composition,dataMatrix$Age,dataMatrix$Density))
dataMatrix$Level2 <- as.factor(dataMatrix$Species)
dataMatrix$Level1 <- as.factor(seq(1,nrow(dataMatrix)))
# Part 2.1: Collate data
dataMatrix$BubbleSize <- 0
Weight <- 1/sqrt(dataMatrix$vi)
Breaks <- quantile(Weight,c(0.2,0.4,0.6,0.8,1))
selectIDs <- which(Weight < Breaks[1])
dataMatrix$BubbleSize <- 0.4
for(i in seq(2,length(Breaks))){
selectIDs <- which((Weight < Breaks[i])&(Weight >= Breaks[i-1]))
dataMatrix$BubbleSize[selectIDs] <- 0.4 + (i-1)*0.4
}
selectIDs <- which((dataMatrix$yi <= quantile(dataMatrix$yi,0.98))&(dataMatrix$yi >= quantile(dataMatrix$yi,0.02)))
newDataMatrix <- dataMatrix[selectIDs,c('PlotSize','yi','BubbleSize')]
# Part 2.2: Fit
res <- rma.mv(yi,vi,mods = ~PlotSize,random = ~1|Level4/Level3/Level2/Level1,method = 'ML',data = dataMatrix)
# Fit line
plotsizeLine <- as.data.frame(matrix(data = 0,nrow = 100,ncol = 4))
colnames(plotsizeLine) <- c('X','Y','Upper','Lower')
tempX <- seq(min(dataMatrix$PlotSize),max(dataMatrix$PlotSize),length.out = 100)
for(i in seq(1,length(tempX))){
plotsizeLine[i,1] <- tempX[i]
tempResult <- predict.rma(res,newmods = tempX[i])
plotsizeLine[i,2] <- as.numeric(tempResult$pred)
plotsizeLine[i,3] <- as.numeric(tempResult$ci.ub)
plotsizeLine[i,4] <- as.numeric(tempResult$ci.lb)
}
# CI polygon
plotsizeCIPolygon <- as.data.frame(matrix(data = 0,nrow = (2*nrow(plotsizeLine)+1),ncol = 2))
colnames(plotsizeCIPolygon) <- c('X','Y')
count <- 1
for(i in seq(1,nrow(plotsizeLine))){
plotsizeCIPolygon$X[count] <- plotsizeLine$X[i]
plotsizeCIPolygon$Y[count] <- plotsizeLine$Upper[i]
count <- count + 1
}
for(i in seq(nrow(plotsizeLine),1,-1)){
plotsizeCIPolygon$X[count] <- plotsizeLine$X[i]
plotsizeCIPolygon$Y[count] <- plotsizeLine$Lower[i]
count <- count + 1
}
plotsizeCIPolygon$X[count] <- plotsizeLine$X[1]
plotsizeCIPolygon$Y[count] <- plotsizeLine$Upper[1]
# Part 2.3: Draw
fig_S16b <- ggplot()+
geom_point(newDataMatrix,mapping = aes(x = PlotSize,y = yi),
shape = 20,stroke = 0,color = '#666666',size = newDataMatrix$BubbleSize,alpha = 0.4)+
geom_hline(yintercept = 0,size = 0.3,color = '#000000',linetype = 'dashed')+
geom_line(data = plotsizeLine,mapping = aes(x = X,y = Y),size = 0.5,color = CMYKtoRGB(0.84,0.67,0,0),linetype = 'dashed')+
geom_polygon(data = plotsizeCIPolygon,mapping = aes(x = X,y = Y),size = 0.5,fill = CMYKtoRGB(0.84,0.67,0,0),alpha = 0.3)+
scale_x_continuous(limits = c(min(newDataMatrix$PlotSize),max(newDataMatrix$PlotSize)),breaks = seq(0,2000,1000),labels = c('0','1000','2000'),expand = expansion(mult = 0.08))+
scale_y_continuous(limits = c(-0.6,0.6),breaks = seq(-0.6,0.6,0.3),labels = c('-0.6','-0.3','0','0.3','0.6'),expand = c(0,0))+
theme_custom()
##==== Part 2: DBH (Species) ====##
##==== Part 3: Biomass (Species) ====##
load('Data_Bio_PlotSize_Add_Species.R')
selectIDs <- which(!is.na(dataMatrix$PlotSize))
dataMatrix <- dataMatrix[selectIDs,]
dataMatrix$Level4 <- as.factor(paste(dataMatrix$Lat,dataMatrix$Lon))
dataMatrix$Level3 <- as.factor(paste(dataMatrix$Composition,dataMatrix$Age,dataMatrix$Density))
dataMatrix$Level2 <- as.factor(dataMatrix$Species)
dataMatrix$Level1 <- as.factor(seq(1,nrow(dataMatrix)))
# Part 3.1: Collate data
dataMatrix$BubbleSize <- 0
Weight <- 1/sqrt(dataMatrix$vi)
Breaks <- quantile(Weight,c(0.2,0.4,0.6,0.8,1))
selectIDs <- which(Weight < Breaks[1])
dataMatrix$BubbleSize <- 0.4
for(i in seq(2,length(Breaks))){
selectIDs <- which((Weight < Breaks[i])&(Weight >= Breaks[i-1]))
dataMatrix$BubbleSize[selectIDs] <- 0.4 + (i-1)*0.4
}
selectIDs <- which((dataMatrix$yi <= quantile(dataMatrix$yi,0.98))&(dataMatrix$yi >= quantile(dataMatrix$yi,0.02)))
newDataMatrix <- dataMatrix[selectIDs,c('PlotSize','yi','BubbleSize')]
# Part 3.2: Fit
res <- rma.mv(yi,vi,mods = ~PlotSize,random = ~1|Level4/Level3/Level2/Level1,method = 'ML',data = dataMatrix)
# Fit line
plotsizeLine <- as.data.frame(matrix(data = 0,nrow = 100,ncol = 4))
colnames(plotsizeLine) <- c('X','Y','Upper','Lower')
tempX <- seq(min(dataMatrix$PlotSize),max(dataMatrix$PlotSize),length.out = 100)
for(i in seq(1,length(tempX))){
plotsizeLine[i,1] <- tempX[i]
tempResult <- predict.rma(res,newmods = tempX[i])
plotsizeLine[i,2] <- as.numeric(tempResult$pred)
plotsizeLine[i,3] <- as.numeric(tempResult$ci.ub)
plotsizeLine[i,4] <- as.numeric(tempResult$ci.lb)
}
# CI polygon
plotsizeCIPolygon <- as.data.frame(matrix(data = 0,nrow = (2*nrow(plotsizeLine)+1),ncol = 2))
colnames(plotsizeCIPolygon) <- c('X','Y')
count <- 1
for(i in seq(1,nrow(plotsizeLine))){
plotsizeCIPolygon$X[count] <- plotsizeLine$X[i]
plotsizeCIPolygon$Y[count] <- plotsizeLine$Upper[i]
count <- count + 1
}
for(i in seq(nrow(plotsizeLine),1,-1)){
plotsizeCIPolygon$X[count] <- plotsizeLine$X[i]
plotsizeCIPolygon$Y[count] <- plotsizeLine$Lower[i]
count <- count + 1
}
plotsizeCIPolygon$X[count] <- plotsizeLine$X[1]
plotsizeCIPolygon$Y[count] <- plotsizeLine$Upper[1]
# Part 3.3: Draw
fig_S16c <- ggplot()+
geom_point(newDataMatrix,mapping = aes(x = PlotSize,y = yi),
shape = 20,stroke = 0,color = '#666666',size = newDataMatrix$BubbleSize,alpha = 0.4)+
geom_hline(yintercept = 0,size = 0.3,color = '#000000',linetype = 'dashed')+
geom_line(data = plotsizeLine,mapping = aes(x = X,y = Y),size = 0.5,color = CMYKtoRGB(0.84,0.67,0,0),linetype = 'dashed')+
geom_polygon(data = plotsizeCIPolygon,mapping = aes(x = X,y = Y),size = 0.5,fill = CMYKtoRGB(0.84,0.67,0,0),alpha = 0.3)+
scale_x_continuous(limits = c(min(newDataMatrix$PlotSize),max(newDataMatrix$PlotSize)),breaks = seq(0,2000,1000),labels = c('0','1000','2000'),expand = expansion(mult = 0.08))+
scale_y_continuous(limits = c(-1.2,1.2),breaks = seq(-1.2,1.2,0.6),labels = c('-1.2','-0.6','0','0.6','1.2'),expand = c(0,0))+
theme_custom()
##==== Part 3: Biomass (Species) ====##
##==== Part 4: Height (Community) ====##
load('Data_Height_PlotSize_Add_Community.R')
selectIDs <- which(!is.na(dataMatrix$PlotSize))
dataMatrix <- dataMatrix[selectIDs,]
dataMatrix$Level4 <- as.factor(paste(dataMatrix$Lat,dataMatrix$Lon))
dataMatrix$Level3 <- as.factor(paste(dataMatrix$Composition,dataMatrix$Age,dataMatrix$Density))
dataMatrix$Level2 <- as.factor(seq(1,nrow(dataMatrix)))
# Part 4.1: Collate data
dataMatrix$BubbleSize <- 0
Weight <- 1/sqrt(dataMatrix$Net_vi)
Breaks <- quantile(Weight,c(0.2,0.4,0.6,0.8,1))
selectIDs <- which(Weight < Breaks[1])
dataMatrix$BubbleSize <- 0.4
for(i in seq(2,length(Breaks))){
selectIDs <- which((Weight < Breaks[i])&(Weight >= Breaks[i-1]))
dataMatrix$BubbleSize[selectIDs] <- 0.4 + (i-1)*0.4
}
selectIDs <- which((dataMatrix$Net_yi <= quantile(dataMatrix$Net_yi,0.98))&(dataMatrix$Net_yi >= quantile(dataMatrix$Net_yi,0.02)))
newDataMatrix <- dataMatrix[selectIDs,c('PlotSize','Net_yi','BubbleSize')]
# Part 4.2: Fit
res_Net <- rma.mv(Net_yi,Net_vi,mods = ~PlotSize,random = ~1|Level4/Level3/Level2,method = 'ML',data = dataMatrix)
res_Com <- rma.mv(Com_yi,Com_vi,mods = ~PlotSize,random = ~1|Level4/Level3/Level2,method = 'ML',data = dataMatrix)
res_Sel <- rma.mv(Sel_yi,Sel_vi,mods = ~PlotSize,random = ~1|Level4/Level3/Level2,method = 'ML',data = dataMatrix)
# Fit line Net
plotsizeLineNet <- as.data.frame(matrix(data = 0,nrow = 100,ncol = 4))
colnames(plotsizeLineNet) <- c('X','Y','Upper','Lower')
tempX <- seq(min(dataMatrix$PlotSize),max(dataMatrix$PlotSize),length.out = 100)
for(i in seq(1,length(tempX))){
plotsizeLineNet[i,1] <- tempX[i]
tempResult <- predict.rma(res_Net,newmods = tempX[i])
plotsizeLineNet[i,2] <- as.numeric(tempResult$pred)
plotsizeLineNet[i,3] <- as.numeric(tempResult$ci.ub)
plotsizeLineNet[i,4] <- as.numeric(tempResult$ci.lb)
}
# Fit line Com
plotsizeLineCom <- as.data.frame(matrix(data = 0,nrow = 100,ncol = 4))
colnames(plotsizeLineCom) <- c('X','Y','Upper','Lower')
tempX <- seq(min(dataMatrix$PlotSize),max(dataMatrix$PlotSize),length.out = 100)
for(i in seq(1,length(tempX))){
plotsizeLineCom[i,1] <- tempX[i]
tempResult <- predict.rma(res_Com,newmods = tempX[i])
plotsizeLineCom[i,2] <- as.numeric(tempResult$pred)
plotsizeLineCom[i,3] <- as.numeric(tempResult$ci.ub)
plotsizeLineCom[i,4] <- as.numeric(tempResult$ci.lb)
}
# Fit line Sel
plotsizeLineSel <- as.data.frame(matrix(data = 0,nrow = 100,ncol = 4))
colnames(plotsizeLineSel) <- c('X','Y','Upper','Lower')
tempX <- seq(min(dataMatrix$PlotSize),max(dataMatrix$PlotSize),length.out = 100)
for(i in seq(1,length(tempX))){
plotsizeLineSel[i,1] <- tempX[i]
tempResult <- predict.rma(res_Sel,newmods = tempX[i])
plotsizeLineSel[i,2] <- as.numeric(tempResult$pred)
plotsizeLineSel[i,3] <- as.numeric(tempResult$ci.ub)
plotsizeLineSel[i,4] <- as.numeric(tempResult$ci.lb)
}
# CI polygon Net
plotsizeCIPolygonNet <- as.data.frame(matrix(data = 0,nrow = (2*nrow(plotsizeLineNet)+1),ncol = 2))
colnames(plotsizeCIPolygonNet) <- c('X','Y')
count <- 1
for(i in seq(1,nrow(plotsizeLineNet))){
plotsizeCIPolygonNet$X[count] <- plotsizeLineNet$X[i]
plotsizeCIPolygonNet$Y[count] <- plotsizeLineNet$Upper[i]
count <- count + 1
}
for(i in seq(nrow(plotsizeLineNet),1,-1)){
plotsizeCIPolygonNet$X[count] <- plotsizeLineNet$X[i]
plotsizeCIPolygonNet$Y[count] <- plotsizeLineNet$Lower[i]
count <- count + 1
}
plotsizeCIPolygonNet$X[count] <- plotsizeLineNet$X[1]
plotsizeCIPolygonNet$Y[count] <- plotsizeLineNet$Upper[1]
# CI polygon Com
plotsizeCIPolygonCom <- as.data.frame(matrix(data = 0,nrow = (2*nrow(plotsizeLineCom)+1),ncol = 2))
colnames(plotsizeCIPolygonCom) <- c('X','Y')
count <- 1
for(i in seq(1,nrow(plotsizeLineCom))){
plotsizeCIPolygonCom$X[count] <- plotsizeLineCom$X[i]
plotsizeCIPolygonCom$Y[count] <- plotsizeLineCom$Upper[i]
count <- count + 1
}
for(i in seq(nrow(plotsizeLineCom),1,-1)){
plotsizeCIPolygonCom$X[count] <- plotsizeLineCom$X[i]
plotsizeCIPolygonCom$Y[count] <- plotsizeLineCom$Lower[i]
count <- count + 1
}
plotsizeCIPolygonCom$X[count] <- plotsizeLineCom$X[1]
plotsizeCIPolygonCom$Y[count] <- plotsizeLineCom$Upper[1]
# CI polygon Sel
plotsizeCIPolygonSel <- as.data.frame(matrix(data = 0,nrow = (2*nrow(plotsizeLineSel)+1),ncol = 2))
colnames(plotsizeCIPolygonSel) <- c('X','Y')
count <- 1
for(i in seq(1,nrow(plotsizeLineSel))){
plotsizeCIPolygonSel$X[count] <- plotsizeLineSel$X[i]
plotsizeCIPolygonSel$Y[count] <- plotsizeLineSel$Upper[i]
count <- count + 1
}
for(i in seq(nrow(plotsizeLineSel),1,-1)){
plotsizeCIPolygonSel$X[count] <- plotsizeLineSel$X[i]
plotsizeCIPolygonSel$Y[count] <- plotsizeLineSel$Lower[i]
count <- count + 1
}
plotsizeCIPolygonSel$X[count] <- plotsizeLineSel$X[1]
plotsizeCIPolygonSel$Y[count] <- plotsizeLineSel$Upper[1]
# Part 4.3: Draw
fig_S16d <- ggplot()+
geom_point(newDataMatrix,mapping = aes(x = PlotSize,y = Net_yi),
shape = 20,stroke = 0,color = '#666666',size = newDataMatrix$BubbleSize,alpha = 0.4)+
geom_hline(yintercept = 0,size = 0.3,color = '#000000',linetype = 'dashed')+
geom_line(data = plotsizeLineSel,mapping = aes(x = X,y = Y),size = 0.5,color = CMYKtoRGB(0,0.38,0.96,0),linetype = 'dashed')+
geom_polygon(data = plotsizeCIPolygonSel,mapping = aes(x = X,y = Y),size = 0.5,fill = CMYKtoRGB(0,0.38,0.96,0),alpha = 0.3)+
geom_line(data = plotsizeLineCom,mapping = aes(x = X,y = Y),size = 0.5,color = CMYKtoRGB(0.82,0.2,0.93,0.24),linetype = 'dashed')+
geom_polygon(data = plotsizeCIPolygonCom,mapping = aes(x = X,y = Y),size = 0.5,fill = CMYKtoRGB(0.82,0.2,0.93,0.24),alpha = 0.3)+
geom_line(data = plotsizeLineNet,mapping = aes(x = X,y = Y),size = 0.5,color = CMYKtoRGB(0.84,0.67,0,0),linetype = 'dashed')+
geom_polygon(data = plotsizeCIPolygonNet,mapping = aes(x = X,y = Y),size = 0.5,fill = CMYKtoRGB(0.84,0.67,0,0),alpha = 0.3)+
scale_x_continuous(limits = c(min(newDataMatrix$PlotSize),max(newDataMatrix$PlotSize)),breaks = seq(0,2000,1000),labels = c('0','1000','2000'),expand = expansion(mult = 0.08))+
scale_y_continuous(limits = c(-0.4,0.4),breaks = seq(-0.4,0.4,0.2),labels = c('-0.4','-0.2','0','0.2','0.4'),expand = c(0,0))+
theme_custom()
##==== Part 4: Height (Community) ====##
##==== Part 5: DBH (Community) ====##
load('Data_DBH_PlotSize_Add_Community.R')
selectIDs <- which(!is.na(dataMatrix$PlotSize))
dataMatrix <- dataMatrix[selectIDs,]
dataMatrix$Level4 <- as.factor(paste(dataMatrix$Lat,dataMatrix$Lon))
dataMatrix$Level3 <- as.factor(paste(dataMatrix$Composition,dataMatrix$Age,dataMatrix$Density))
dataMatrix$Level2 <- as.factor(seq(1,nrow(dataMatrix)))
# Part 5.1: Collate data
dataMatrix$BubbleSize <- 0
Weight <- 1/sqrt(dataMatrix$Net_vi)
Breaks <- quantile(Weight,c(0.2,0.4,0.6,0.8,1))
selectIDs <- which(Weight < Breaks[1])
dataMatrix$BubbleSize <- 0.4
for(i in seq(2,length(Breaks))){
selectIDs <- which((Weight < Breaks[i])&(Weight >= Breaks[i-1]))
dataMatrix$BubbleSize[selectIDs] <- 0.4 + (i-1)*0.4
}
selectIDs <- which((dataMatrix$Net_yi <= quantile(dataMatrix$Net_yi,0.98))&(dataMatrix$Net_yi >= quantile(dataMatrix$Net_yi,0.02)))
newDataMatrix <- dataMatrix[selectIDs,c('PlotSize','Net_yi','BubbleSize')]
# Part 5.2: Fit
res_Net <- rma.mv(Net_yi,Net_vi,mods = ~PlotSize,random = ~1|Level4/Level3/Level2,method = 'ML',data = dataMatrix)
res_Com <- rma.mv(Com_yi,Com_vi,mods = ~PlotSize,random = ~1|Level4/Level3/Level2,method = 'ML',data = dataMatrix)
res_Sel <- rma.mv(Sel_yi,Sel_vi,mods = ~PlotSize,random = ~1|Level4/Level3/Level2,method = 'ML',data = dataMatrix)
# Fit line Net
plotsizeLineNet <- as.data.frame(matrix(data = 0,nrow = 100,ncol = 4))
colnames(plotsizeLineNet) <- c('X','Y','Upper','Lower')
tempX <- seq(min(dataMatrix$PlotSize),max(dataMatrix$PlotSize),length.out = 100)
for(i in seq(1,length(tempX))){
plotsizeLineNet[i,1] <- tempX[i]
tempResult <- predict.rma(res_Net,newmods = tempX[i])
plotsizeLineNet[i,2] <- as.numeric(tempResult$pred)
plotsizeLineNet[i,3] <- as.numeric(tempResult$ci.ub)
plotsizeLineNet[i,4] <- as.numeric(tempResult$ci.lb)
}
# Fit line Com
plotsizeLineCom <- as.data.frame(matrix(data = 0,nrow = 100,ncol = 4))
colnames(plotsizeLineCom) <- c('X','Y','Upper','Lower')
tempX <- seq(min(dataMatrix$PlotSize),max(dataMatrix$PlotSize),length.out = 100)
for(i in seq(1,length(tempX))){
plotsizeLineCom[i,1] <- tempX[i]
tempResult <- predict.rma(res_Com,newmods = tempX[i])
plotsizeLineCom[i,2] <- as.numeric(tempResult$pred)
plotsizeLineCom[i,3] <- as.numeric(tempResult$ci.ub)
plotsizeLineCom[i,4] <- as.numeric(tempResult$ci.lb)
}
# Fit line Sel
plotsizeLineSel <- as.data.frame(matrix(data = 0,nrow = 100,ncol = 4))
colnames(plotsizeLineSel) <- c('X','Y','Upper','Lower')
tempX <- seq(min(dataMatrix$PlotSize),max(dataMatrix$PlotSize),length.out = 100)
for(i in seq(1,length(tempX))){
plotsizeLineSel[i,1] <- tempX[i]
tempResult <- predict.rma(res_Sel,newmods = tempX[i])
plotsizeLineSel[i,2] <- as.numeric(tempResult$pred)
plotsizeLineSel[i,3] <- as.numeric(tempResult$ci.ub)
plotsizeLineSel[i,4] <- as.numeric(tempResult$ci.lb)
}
# CI polygon Net
plotsizeCIPolygonNet <- as.data.frame(matrix(data = 0,nrow = (2*nrow(plotsizeLineNet)+1),ncol = 2))
colnames(plotsizeCIPolygonNet) <- c('X','Y')
count <- 1
for(i in seq(1,nrow(plotsizeLineNet))){
plotsizeCIPolygonNet$X[count] <- plotsizeLineNet$X[i]
plotsizeCIPolygonNet$Y[count] <- plotsizeLineNet$Upper[i]
count <- count + 1
}
for(i in seq(nrow(plotsizeLineNet),1,-1)){
plotsizeCIPolygonNet$X[count] <- plotsizeLineNet$X[i]
plotsizeCIPolygonNet$Y[count] <- plotsizeLineNet$Lower[i]
count <- count + 1
}
plotsizeCIPolygonNet$X[count] <- plotsizeLineNet$X[1]
plotsizeCIPolygonNet$Y[count] <- plotsizeLineNet$Upper[1]
# CI polygon Com
plotsizeCIPolygonCom <- as.data.frame(matrix(data = 0,nrow = (2*nrow(plotsizeLineCom)+1),ncol = 2))
colnames(plotsizeCIPolygonCom) <- c('X','Y')
count <- 1
for(i in seq(1,nrow(plotsizeLineCom))){
plotsizeCIPolygonCom$X[count] <- plotsizeLineCom$X[i]
plotsizeCIPolygonCom$Y[count] <- plotsizeLineCom$Upper[i]
count <- count + 1
}
for(i in seq(nrow(plotsizeLineCom),1,-1)){
plotsizeCIPolygonCom$X[count] <- plotsizeLineCom$X[i]
plotsizeCIPolygonCom$Y[count] <- plotsizeLineCom$Lower[i]
count <- count + 1
}
plotsizeCIPolygonCom$X[count] <- plotsizeLineCom$X[1]
plotsizeCIPolygonCom$Y[count] <- plotsizeLineCom$Upper[1]
# CI polygon Sel
plotsizeCIPolygonSel <- as.data.frame(matrix(data = 0,nrow = (2*nrow(plotsizeLineSel)+1),ncol = 2))
colnames(plotsizeCIPolygonSel) <- c('X','Y')
count <- 1
for(i in seq(1,nrow(plotsizeLineSel))){
plotsizeCIPolygonSel$X[count] <- plotsizeLineSel$X[i]
plotsizeCIPolygonSel$Y[count] <- plotsizeLineSel$Upper[i]
count <- count + 1
}
for(i in seq(nrow(plotsizeLineSel),1,-1)){
plotsizeCIPolygonSel$X[count] <- plotsizeLineSel$X[i]
plotsizeCIPolygonSel$Y[count] <- plotsizeLineSel$Lower[i]
count <- count + 1
}
plotsizeCIPolygonSel$X[count] <- plotsizeLineSel$X[1]
plotsizeCIPolygonSel$Y[count] <- plotsizeLineSel$Upper[1]
# Part 5.3: Draw
fig_S16e <- ggplot()+
geom_point(newDataMatrix,mapping = aes(x = PlotSize,y = Net_yi),
shape = 20,stroke = 0,color = '#666666',size = newDataMatrix$BubbleSize,alpha = 0.4)+
geom_hline(yintercept = 0,size = 0.3,color = '#000000',linetype = 'dashed')+
geom_line(data = plotsizeLineSel,mapping = aes(x = X,y = Y),size = 0.5,color = CMYKtoRGB(0,0.38,0.96,0))+
geom_polygon(data = plotsizeCIPolygonSel,mapping = aes(x = X,y = Y),size = 0.5,fill = CMYKtoRGB(0,0.38,0.96,0),alpha = 0.3)+
geom_line(data = plotsizeLineCom,mapping = aes(x = X,y = Y),size = 0.5,color = CMYKtoRGB(0.82,0.2,0.93,0.24),linetype = 'dashed')+
geom_polygon(data = plotsizeCIPolygonCom,mapping = aes(x = X,y = Y),size = 0.5,fill = CMYKtoRGB(0.82,0.2,0.93,0.24),alpha = 0.3)+
geom_line(data = plotsizeLineNet,mapping = aes(x = X,y = Y),size = 0.5,color = CMYKtoRGB(0.84,0.67,0,0),linetype = 'dashed')+
geom_polygon(data = plotsizeCIPolygonNet,mapping = aes(x = X,y = Y),size = 0.5,fill = CMYKtoRGB(0.84,0.67,0,0),alpha = 0.3)+
scale_x_continuous(limits = c(min(newDataMatrix$PlotSize),max(newDataMatrix$PlotSize)),breaks = seq(0,2000,1000),labels = c('0','1000','2000'),expand = expansion(mult = 0.08))+
scale_y_continuous(limits = c(-0.4,0.4),breaks = seq(-0.4,0.4,0.2),labels = c('-0.4','-0.2','0','0.2','0.4'),expand = c(0,0))+
theme_custom()
##==== Part 5: DBH (Community) ====##
##==== Part 6: Biomass (Community) ====##
load('Data_Bio_PlotSize_Add_Community.R')
selectIDs <- which(!is.na(dataMatrix$PlotSize))
dataMatrix <- dataMatrix[selectIDs,]
dataMatrix$Level4 <- as.factor(paste(dataMatrix$Lat,dataMatrix$Lon))
dataMatrix$Level3 <- as.factor(paste(dataMatrix$Composition,dataMatrix$Age,dataMatrix$Density))
dataMatrix$Level2 <- as.factor(seq(1,nrow(dataMatrix)))
# Part 6.1: Collate data
dataMatrix$BubbleSize <- 0
Weight <- 1/sqrt(dataMatrix$Net_vi)
Breaks <- quantile(Weight,c(0.2,0.4,0.6,0.8,1))
selectIDs <- which(Weight < Breaks[1])
dataMatrix$BubbleSize <- 0.4
for(i in seq(2,length(Breaks))){
selectIDs <- which((Weight < Breaks[i])&(Weight >= Breaks[i-1]))
dataMatrix$BubbleSize[selectIDs] <- 0.4 + (i-1)*0.4
}
selectIDs <- which((dataMatrix$Net_yi <= quantile(dataMatrix$Net_yi,0.98))&(dataMatrix$Net_yi >= quantile(dataMatrix$Net_yi,0.02)))
newDataMatrix <- dataMatrix[selectIDs,c('PlotSize','Net_yi','BubbleSize')]
# Part 6.2: Fit
res_Net <- rma.mv(Net_yi,Net_vi,mods = ~PlotSize,random = ~1|Level4/Level3/Level2,method = 'ML',data = dataMatrix)
res_Com <- rma.mv(Com_yi,Com_vi,mods = ~PlotSize,random = ~1|Level4/Level3/Level2,method = 'ML',data = dataMatrix)
res_Sel <- rma.mv(Sel_yi,Sel_vi,mods = ~PlotSize,random = ~1|Level4/Level3/Level2,method = 'ML',data = dataMatrix)
# Fit line Net
plotsizeLineNet <- as.data.frame(matrix(data = 0,nrow = 100,ncol = 4))
colnames(plotsizeLineNet) <- c('X','Y','Upper','Lower')
tempX <- seq(min(dataMatrix$PlotSize),max(dataMatrix$PlotSize),length.out = 100)
for(i in seq(1,length(tempX))){
plotsizeLineNet[i,1] <- tempX[i]
tempResult <- predict.rma(res_Net,newmods = tempX[i])
plotsizeLineNet[i,2] <- as.numeric(tempResult$pred)
plotsizeLineNet[i,3] <- as.numeric(tempResult$ci.ub)
plotsizeLineNet[i,4] <- as.numeric(tempResult$ci.lb)
}
# Fit line Com
plotsizeLineCom <- as.data.frame(matrix(data = 0,nrow = 100,ncol = 4))
colnames(plotsizeLineCom) <- c('X','Y','Upper','Lower')
tempX <- seq(min(dataMatrix$PlotSize),max(dataMatrix$PlotSize),length.out = 100)
for(i in seq(1,length(tempX))){
plotsizeLineCom[i,1] <- tempX[i]
tempResult <- predict.rma(res_Com,newmods = tempX[i])
plotsizeLineCom[i,2] <- as.numeric(tempResult$pred)
plotsizeLineCom[i,3] <- as.numeric(tempResult$ci.ub)
plotsizeLineCom[i,4] <- as.numeric(tempResult$ci.lb)
}
# Fit line Sel
plotsizeLineSel <- as.data.frame(matrix(data = 0,nrow = 100,ncol = 4))
colnames(plotsizeLineSel) <- c('X','Y','Upper','Lower')
tempX <- seq(min(dataMatrix$PlotSize),max(dataMatrix$PlotSize),length.out = 100)
for(i in seq(1,length(tempX))){
plotsizeLineSel[i,1] <- tempX[i]
tempResult <- predict.rma(res_Sel,newmods = tempX[i])
plotsizeLineSel[i,2] <- as.numeric(tempResult$pred)
plotsizeLineSel[i,3] <- as.numeric(tempResult$ci.ub)
plotsizeLineSel[i,4] <- as.numeric(tempResult$ci.lb)
}
# CI polygon Net
plotsizeCIPolygonNet <- as.data.frame(matrix(data = 0,nrow = (2*nrow(plotsizeLineNet)+1),ncol = 2))
colnames(plotsizeCIPolygonNet) <- c('X','Y')
count <- 1
for(i in seq(1,nrow(plotsizeLineNet))){
plotsizeCIPolygonNet$X[count] <- plotsizeLineNet$X[i]
plotsizeCIPolygonNet$Y[count] <- plotsizeLineNet$Upper[i]
count <- count + 1
}
for(i in seq(nrow(plotsizeLineNet),1,-1)){
plotsizeCIPolygonNet$X[count] <- plotsizeLineNet$X[i]
plotsizeCIPolygonNet$Y[count] <- plotsizeLineNet$Lower[i]
count <- count + 1
}
plotsizeCIPolygonNet$X[count] <- plotsizeLineNet$X[1]
plotsizeCIPolygonNet$Y[count] <- plotsizeLineNet$Upper[1]
# CI polygon Com
plotsizeCIPolygonCom <- as.data.frame(matrix(data = 0,nrow = (2*nrow(plotsizeLineCom)+1),ncol = 2))
colnames(plotsizeCIPolygonCom) <- c('X','Y')
count <- 1
for(i in seq(1,nrow(plotsizeLineCom))){
plotsizeCIPolygonCom$X[count] <- plotsizeLineCom$X[i]
plotsizeCIPolygonCom$Y[count] <- plotsizeLineCom$Upper[i]
count <- count + 1
}
for(i in seq(nrow(plotsizeLineCom),1,-1)){
plotsizeCIPolygonCom$X[count] <- plotsizeLineCom$X[i]
plotsizeCIPolygonCom$Y[count] <- plotsizeLineCom$Lower[i]
count <- count + 1
}
plotsizeCIPolygonCom$X[count] <- plotsizeLineCom$X[1]
plotsizeCIPolygonCom$Y[count] <- plotsizeLineCom$Upper[1]
# CI polygon Sel
plotsizeCIPolygonSel <- as.data.frame(matrix(data = 0,nrow = (2*nrow(plotsizeLineSel)+1),ncol = 2))
colnames(plotsizeCIPolygonSel) <- c('X','Y')
count <- 1
for(i in seq(1,nrow(plotsizeLineSel))){
plotsizeCIPolygonSel$X[count] <- plotsizeLineSel$X[i]
plotsizeCIPolygonSel$Y[count] <- plotsizeLineSel$Upper[i]
count <- count + 1
}
for(i in seq(nrow(plotsizeLineSel),1,-1)){
plotsizeCIPolygonSel$X[count] <- plotsizeLineSel$X[i]
plotsizeCIPolygonSel$Y[count] <- plotsizeLineSel$Lower[i]
count <- count + 1
}
plotsizeCIPolygonSel$X[count] <- plotsizeLineSel$X[1]
plotsizeCIPolygonSel$Y[count] <- plotsizeLineSel$Upper[1]
# Part 6.3: Draw
fig_S16f <- ggplot()+
geom_point(newDataMatrix,mapping = aes(x = PlotSize,y = Net_yi),
shape = 20,stroke = 0,color = '#666666',size = newDataMatrix$BubbleSize,alpha = 0.4)+
geom_hline(yintercept = 0,size = 0.3,color = '#000000',linetype = 'dashed')+
geom_line(data = plotsizeLineSel,mapping = aes(x = X,y = Y),size = 0.5,color = CMYKtoRGB(0,0.38,0.96,0))+
geom_polygon(data = plotsizeCIPolygonSel,mapping = aes(x = X,y = Y),size = 0.5,fill = CMYKtoRGB(0,0.38,0.96,0),alpha = 0.3)+
geom_line(data = plotsizeLineCom,mapping = aes(x = X,y = Y),size = 0.5,color = CMYKtoRGB(0.82,0.2,0.93,0.24),linetype = 'dashed')+
geom_polygon(data = plotsizeCIPolygonCom,mapping = aes(x = X,y = Y),size = 0.5,fill = CMYKtoRGB(0.82,0.2,0.93,0.24),alpha = 0.3)+
geom_line(data = plotsizeLineNet,mapping = aes(x = X,y = Y),size = 0.5,color = CMYKtoRGB(0.84,0.67,0,0),linetype = 'dashed')+
geom_polygon(data = plotsizeCIPolygonNet,mapping = aes(x = X,y = Y),size = 0.5,fill = CMYKtoRGB(0.84,0.67,0,0),alpha = 0.3)+
scale_x_continuous(limits = c(min(newDataMatrix$PlotSize),max(newDataMatrix$PlotSize)),breaks = seq(0,1500,500),labels = c('0','500','1000','1500'),expand = expansion(mult = 0.08))+
scale_y_continuous(limits = c(-0.9,1.2),breaks = seq(-0.6,1.2,0.6),labels = c('-0.6','0','0.6','1.2'),expand = c(0,0))+
theme_custom()
##==== Part 6: Biomass (Community) ====##
##==== Part 7: Combine figures ====##
fig_S16 <- ggdraw()+
draw_plot(fig_S16a,x = 0,y = 0.5,width = 0.333,height = 0.5)+
draw_plot(fig_S16b,x = 0.334,y = 0.5,width = 0.333,height = 0.5)+
draw_plot(fig_S16c,x = 0.667,y = 0.5,width = 0.333,height = 0.5)+
draw_plot(fig_S16d,x = 0,y = 0,width = 0.333,height = 0.5)+
draw_plot(fig_S16e,x = 0.334,y = 0,width = 0.333,height = 0.5)+
draw_plot(fig_S16f,x = 0.667,y = 0,width = 0.333,height = 0.5)
outputFileName <- paste0(currentPath,'/fig_S16.pdf')
pdf(file = outputFileName,width = 4.65,height = 2.7,colormodel = 'cmyk')
print(fig_S16)
dev.off()
##==== Part 7: Combine figures ====##
