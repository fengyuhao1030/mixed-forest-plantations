ageCIPolygon$X[count] <- ageLine$X[i]
ageCIPolygon$Y[count] <- ageLine$Lower[i]
count <- count + 1
}
ageCIPolygon$X[count] <- ageLine$X[1]
ageCIPolygon$Y[count] <- ageLine$Upper[1]
# Part 1.3: Draw
fig_S8a <- ggplot()+
geom_point(newDataMatrix,mapping = aes(x = Age,y = yi),
shape = 20,stroke = 0,color = '#666666',size = newDataMatrix$BubbleSize,alpha = 0.4)+
geom_hline(yintercept = 0,size = 0.3,color = '#000000',linetype = 'dashed')+
geom_line(data = ageLine,mapping = aes(x = X,y = Y),size = 0.5,color = CMYKtoRGB(0.84,0.67,0,0))+
geom_polygon(data = ageCIPolygon,mapping = aes(x = X,y = Y),size = 0.5,fill = CMYKtoRGB(0.84,0.67,0,0),alpha = 0.3)+
scale_x_continuous(breaks = seq(0,60,20),labels = c('0','20','40','60'))+
scale_y_continuous(limits = c(-0.6,0.6),breaks = seq(-0.6,0.6,0.3),labels = c('-0.6','-0.3','0','0.3','0.6'),expand = c(0,0))+
theme_custom()
##==== Part 1: Height (Species) ====##
##==== Part 2: DBH (Species) ====##
load('Data_DBH_Species.R')
dataMatrix$SpeciesRichness <- str_count(dataMatrix$Composition,'\\+') + 1
selectIDs <- which(dataMatrix$SpeciesRichness == 2)
dataMatrix <- dataMatrix[selectIDs,]
dataMatrix$Level4 <- as.factor(paste(dataMatrix$Lat,dataMatrix$Lon))
dataMatrix$Level3 <- as.factor(paste(dataMatrix$Composition,dataMatrix$Age,dataMatrix$Density))
dataMatrix$Level2 <- as.factor(dataMatrix$Species)
dataMatrix$Level1 <- as.factor(seq(1,nrow(dataMatrix)))
# Part 2.1: Collate data
dataMatrix$BubbleSize <- 0
Weight <- 1/sqrt(dataMatrix$vi)
Breaks <- quantile(Weight,c(0.2,0.4,0.6,0.8,1))
selectIDs <- which(Weight < Breaks[1])
dataMatrix$BubbleSize <- 0.4
for(i in seq(2,length(Breaks))){
selectIDs <- which((Weight < Breaks[i])&(Weight >= Breaks[i-1]))
dataMatrix$BubbleSize[selectIDs] <- 0.4 + (i-1)*0.4
}
selectIDs <- which((dataMatrix$yi <= quantile(dataMatrix$yi,0.98))&(dataMatrix$yi >= quantile(dataMatrix$yi,0.02)))
newDataMatrix <- dataMatrix[selectIDs,c('Age','Density','yi','BubbleSize')]
# Part 2.2: Fit
res <- rma.mv(yi,vi,mods = ~Age+Age2-1,random = ~1|Level4/Level3/Level2/Level1,method = 'ML',data = dataMatrix)
# Fit line
ageLine <- as.data.frame(matrix(data = 0,nrow = 100,ncol = 4))
colnames(ageLine) <- c('X','Y','Upper','Lower')
tempX <- seq(min(dataMatrix$Age),max(dataMatrix$Age),length.out = 100)
for(i in seq(1,length(tempX))){
ageLine[i,1] <- tempX[i]
tempResult <- predict.rma(res,newmods = c(tempX[i],tempX[i]^2))
ageLine[i,2] <- as.numeric(tempResult$pred)
ageLine[i,3] <- as.numeric(tempResult$ci.ub)
ageLine[i,4] <- as.numeric(tempResult$ci.lb)
}
# CI polygon
ageCIPolygon <- as.data.frame(matrix(data = 0,nrow = (2*nrow(ageLine)+1),ncol = 2))
colnames(ageCIPolygon) <- c('X','Y')
count <- 1
for(i in seq(1,nrow(ageLine))){
ageCIPolygon$X[count] <- ageLine$X[i]
ageCIPolygon$Y[count] <- ageLine$Upper[i]
count <- count + 1
}
for(i in seq(nrow(ageLine),1,-1)){
ageCIPolygon$X[count] <- ageLine$X[i]
ageCIPolygon$Y[count] <- ageLine$Lower[i]
count <- count + 1
}
ageCIPolygon$X[count] <- ageLine$X[1]
ageCIPolygon$Y[count] <- ageLine$Upper[1]
# Part 2.3: Draw
fig_S8b <- ggplot()+
geom_point(newDataMatrix,mapping = aes(x = Age,y = yi),
shape = 20,stroke = 0,color = '#666666',size = newDataMatrix$BubbleSize,alpha = 0.4)+
geom_hline(yintercept = 0,size = 0.3,color = '#000000',linetype = 'dashed')+
geom_line(data = ageLine,mapping = aes(x = X,y = Y),size = 0.5,color = CMYKtoRGB(0.84,0.67,0,0))+
geom_polygon(data = ageCIPolygon,mapping = aes(x = X,y = Y),size = 0.5,fill = CMYKtoRGB(0.84,0.67,0,0),alpha = 0.3)+
scale_x_continuous(breaks = seq(0,60,20),labels = c('0','20','40','60'))+
scale_y_continuous(limits = c(-0.6,0.6),breaks = seq(-0.6,0.6,0.3),labels = c('-0.6','-0.3','0','0.3','0.6'),expand = c(0,0))+
theme_custom()
##==== Part 2: DBH (Species) ====##
##==== Part 3: Biomass (Species) ====##
load('Data_Bio_Species.R')
dataMatrix$SpeciesRichness <- str_count(dataMatrix$Composition,'\\+') + 1
selectIDs <- which(dataMatrix$SpeciesRichness == 2)
dataMatrix <- dataMatrix[selectIDs,]
dataMatrix$Level4 <- as.factor(paste(dataMatrix$Lat,dataMatrix$Lon))
dataMatrix$Level3 <- as.factor(paste(dataMatrix$Composition,dataMatrix$Age,dataMatrix$Density))
dataMatrix$Level2 <- as.factor(dataMatrix$Species)
dataMatrix$Level1 <- as.factor(seq(1,nrow(dataMatrix)))
# Part 3.1: Collate data
dataMatrix$BubbleSize <- 0
Weight <- 1/sqrt(dataMatrix$vi)
Breaks <- quantile(Weight,c(0.2,0.4,0.6,0.8,1))
selectIDs <- which(Weight < Breaks[1])
dataMatrix$BubbleSize <- 0.4
for(i in seq(2,length(Breaks))){
selectIDs <- which((Weight < Breaks[i])&(Weight >= Breaks[i-1]))
dataMatrix$BubbleSize[selectIDs] <- 0.4 + (i-1)*0.4
}
selectIDs <- which((dataMatrix$yi <= quantile(dataMatrix$yi,0.98))&(dataMatrix$yi >= quantile(dataMatrix$yi,0.02)))
newDataMatrix <- dataMatrix[selectIDs,c('Age','Density','yi','BubbleSize')]
# Part 3.2: Fit
res <- rma.mv(yi,vi,mods = ~Age+Age2-1,random = ~1|Level4/Level3/Level2/Level1,method = 'ML',data = dataMatrix)
# Fit line
ageLine <- as.data.frame(matrix(data = 0,nrow = 100,ncol = 4))
colnames(ageLine) <- c('X','Y','Upper','Lower')
tempX <- seq(min(dataMatrix$Age),max(dataMatrix$Age),length.out = 100)
for(i in seq(1,length(tempX))){
ageLine[i,1] <- tempX[i]
tempResult <- predict.rma(res,newmods = c(tempX[i],tempX[i]^2))
ageLine[i,2] <- as.numeric(tempResult$pred)
ageLine[i,3] <- as.numeric(tempResult$ci.ub)
ageLine[i,4] <- as.numeric(tempResult$ci.lb)
}
# CI polygon
ageCIPolygon <- as.data.frame(matrix(data = 0,nrow = (2*nrow(ageLine)+1),ncol = 2))
colnames(ageCIPolygon) <- c('X','Y')
count <- 1
for(i in seq(1,nrow(ageLine))){
ageCIPolygon$X[count] <- ageLine$X[i]
ageCIPolygon$Y[count] <- ageLine$Upper[i]
count <- count + 1
}
for(i in seq(nrow(ageLine),1,-1)){
ageCIPolygon$X[count] <- ageLine$X[i]
ageCIPolygon$Y[count] <- ageLine$Lower[i]
count <- count + 1
}
ageCIPolygon$X[count] <- ageLine$X[1]
ageCIPolygon$Y[count] <- ageLine$Upper[1]
# Part 3.3: Draw
fig_S8c <- ggplot()+
geom_point(newDataMatrix,mapping = aes(x = Age,y = yi),
shape = 20,stroke = 0,color = '#666666',size = newDataMatrix$BubbleSize,alpha = 0.4)+
geom_hline(yintercept = 0,size = 0.3,color = '#000000',linetype = 'dashed')+
geom_line(data = ageLine,mapping = aes(x = X,y = Y),size = 0.5,color = CMYKtoRGB(0.84,0.67,0,0))+
geom_polygon(data = ageCIPolygon,mapping = aes(x = X,y = Y),size = 0.5,fill = CMYKtoRGB(0.84,0.67,0,0),alpha = 0.3)+
scale_x_continuous(breaks = seq(0,60,20),labels = c('0','20','40','60'))+
scale_y_continuous(limits = c(-1.2,1.2),breaks = seq(-1.2,1.2,0.6),labels = c('-1.2','-0.6','0','0.6','1.2'),expand = c(0,0))+
theme_custom()
##==== Part 3: Biomass (Species) ====##
##==== Part 4: Height (Community) ====##
load('Data_Height_Community.R')
dataMatrix$SpeciesRichness <- str_count(dataMatrix$Composition,'\\+') + 1
selectIDs <- which(dataMatrix$SpeciesRichness == 2)
dataMatrix <- dataMatrix[selectIDs,]
dataMatrix$Level4 <- as.factor(paste(dataMatrix$Lat,dataMatrix$Lon))
dataMatrix$Level3 <- as.factor(paste(dataMatrix$Composition,dataMatrix$Age,dataMatrix$Density))
dataMatrix$Level2 <- as.factor(seq(1,nrow(dataMatrix)))
# Part 4.1: Collate data
dataMatrix$BubbleSize <- 0
Weight <- 1/sqrt(dataMatrix$Net_vi)
Breaks <- quantile(Weight,c(0.2,0.4,0.6,0.8,1))
selectIDs <- which(Weight < Breaks[1])
dataMatrix$BubbleSize <- 0.4
for(i in seq(2,length(Breaks))){
selectIDs <- which((Weight < Breaks[i])&(Weight >= Breaks[i-1]))
dataMatrix$BubbleSize[selectIDs] <- 0.4 + (i-1)*0.4
}
selectIDs <- which((dataMatrix$Net_yi <= quantile(dataMatrix$Net_yi,0.98))&(dataMatrix$Net_yi >= quantile(dataMatrix$Net_yi,0.02)))
newDataMatrix <- dataMatrix[selectIDs,c('Age','Density','Net_yi','BubbleSize')]
# Part 4.2: Fit
res_Net <- rma.mv(Net_yi,Net_vi,mods = ~Age+Age2-1,random = ~1|Level4/Level3/Level2,method = 'ML',data = dataMatrix)
res_Com <- rma.mv(Com_yi,Com_vi,mods = ~Age+Age2-1,random = ~1|Level4/Level3/Level2,method = 'ML',data = dataMatrix)
res_Sel <- rma.mv(Sel_yi,Sel_vi,mods = ~Age-1,random = ~1|Level4/Level3/Level2,method = 'ML',data = dataMatrix)
# Fit line Net
ageLineNet <- as.data.frame(matrix(data = 0,nrow = 100,ncol = 4))
colnames(ageLineNet) <- c('X','Y','Upper','Lower')
tempX <- seq(min(dataMatrix$Age),max(dataMatrix$Age),length.out = 100)
for(i in seq(1,length(tempX))){
ageLineNet[i,1] <- tempX[i]
tempResult <- predict.rma(res_Net,newmods = c(tempX[i],tempX[i]^2))
ageLineNet[i,2] <- as.numeric(tempResult$pred)
ageLineNet[i,3] <- as.numeric(tempResult$ci.ub)
ageLineNet[i,4] <- as.numeric(tempResult$ci.lb)
}
# Fit line Com
ageLineCom <- as.data.frame(matrix(data = 0,nrow = 100,ncol = 4))
colnames(ageLineCom) <- c('X','Y','Upper','Lower')
tempX <- seq(min(dataMatrix$Age),max(dataMatrix$Age),length.out = 100)
for(i in seq(1,length(tempX))){
ageLineCom[i,1] <- tempX[i]
tempResult <- predict.rma(res_Com,newmods = c(tempX[i],tempX[i]^2))
ageLineCom[i,2] <- as.numeric(tempResult$pred)
ageLineCom[i,3] <- as.numeric(tempResult$ci.ub)
ageLineCom[i,4] <- as.numeric(tempResult$ci.lb)
}
# Fit line Sel
ageLineSel <- as.data.frame(matrix(data = 0,nrow = 100,ncol = 4))
colnames(ageLineSel) <- c('X','Y','Upper','Lower')
tempX <- seq(min(dataMatrix$Age),max(dataMatrix$Age),length.out = 100)
for(i in seq(1,length(tempX))){
ageLineSel[i,1] <- tempX[i]
tempResult <- predict.rma(res_Sel,newmods = tempX[i])
ageLineSel[i,2] <- as.numeric(tempResult$pred)
ageLineSel[i,3] <- as.numeric(tempResult$ci.ub)
ageLineSel[i,4] <- as.numeric(tempResult$ci.lb)
}
# CI polygon Net
ageCIPolygonNet <- as.data.frame(matrix(data = 0,nrow = (2*nrow(ageLineNet)+1),ncol = 2))
colnames(ageCIPolygonNet) <- c('X','Y')
count <- 1
for(i in seq(1,nrow(ageLineNet))){
ageCIPolygonNet$X[count] <- ageLineNet$X[i]
ageCIPolygonNet$Y[count] <- ageLineNet$Upper[i]
count <- count + 1
}
for(i in seq(nrow(ageLineNet),1,-1)){
ageCIPolygonNet$X[count] <- ageLineNet$X[i]
ageCIPolygonNet$Y[count] <- ageLineNet$Lower[i]
count <- count + 1
}
ageCIPolygonNet$X[count] <- ageLineNet$X[1]
ageCIPolygonNet$Y[count] <- ageLineNet$Upper[1]
# CI polygon Com
ageCIPolygonCom <- as.data.frame(matrix(data = 0,nrow = (2*nrow(ageLineCom)+1),ncol = 2))
colnames(ageCIPolygonCom) <- c('X','Y')
count <- 1
for(i in seq(1,nrow(ageLineCom))){
ageCIPolygonCom$X[count] <- ageLineCom$X[i]
ageCIPolygonCom$Y[count] <- ageLineCom$Upper[i]
count <- count + 1
}
for(i in seq(nrow(ageLineCom),1,-1)){
ageCIPolygonCom$X[count] <- ageLineCom$X[i]
ageCIPolygonCom$Y[count] <- ageLineCom$Lower[i]
count <- count + 1
}
ageCIPolygonCom$X[count] <- ageLineCom$X[1]
ageCIPolygonCom$Y[count] <- ageLineCom$Upper[1]
# CI polygon Sel
ageCIPolygonSel <- as.data.frame(matrix(data = 0,nrow = (2*nrow(ageLineSel)+1),ncol = 2))
colnames(ageCIPolygonSel) <- c('X','Y')
count <- 1
for(i in seq(1,nrow(ageLineSel))){
ageCIPolygonSel$X[count] <- ageLineSel$X[i]
ageCIPolygonSel$Y[count] <- ageLineSel$Upper[i]
count <- count + 1
}
for(i in seq(nrow(ageLineSel),1,-1)){
ageCIPolygonSel$X[count] <- ageLineSel$X[i]
ageCIPolygonSel$Y[count] <- ageLineSel$Lower[i]
count <- count + 1
}
ageCIPolygonSel$X[count] <- ageLineSel$X[1]
ageCIPolygonSel$Y[count] <- ageLineSel$Upper[1]
# Part 4.3: Draw
fig_S8d <- ggplot()+
geom_point(newDataMatrix,mapping = aes(x = Age,y = Net_yi),
shape = 20,stroke = 0,color = '#666666',size = newDataMatrix$BubbleSize,alpha = 0.4)+
geom_hline(yintercept = 0,size = 0.3,color = '#000000',linetype = 'dashed')+
geom_line(data = ageLineSel,mapping = aes(x = X,y = Y),size = 0.5,color = CMYKtoRGB(0,0.38,0.96,0),linetype = 'dashed')+
geom_polygon(data = ageCIPolygonSel,mapping = aes(x = X,y = Y),size = 0.5,fill = CMYKtoRGB(0,0.38,0.96,0),alpha = 0.3)+
geom_line(data = ageLineCom,mapping = aes(x = X,y = Y),size = 0.5,color = CMYKtoRGB(0.82,0.2,0.93,0.24))+
geom_polygon(data = ageCIPolygonCom,mapping = aes(x = X,y = Y),size = 0.5,fill = CMYKtoRGB(0.82,0.2,0.93,0.24),alpha = 0.3)+
geom_line(data = ageLineNet,mapping = aes(x = X,y = Y),size = 0.5,color = CMYKtoRGB(0.84,0.67,0,0))+
geom_polygon(data = ageCIPolygonNet,mapping = aes(x = X,y = Y),size = 0.5,fill = CMYKtoRGB(0.84,0.67,0,0),alpha = 0.3)+
scale_x_continuous(breaks = seq(0,60,20),labels = c('0','20','40','60'))+
scale_y_continuous(limits = c(-0.4,0.4),breaks = seq(-0.4,0.4,0.2),labels = c('-0.4','-0.2','0','0.2','0.4'),expand = c(0,0))+
theme_custom()
##==== Part 4: Height (Community) ====##
##==== Part 5: DBH (Community) ====##
load('Data_DBH_Community.R')
dataMatrix$SpeciesRichness <- str_count(dataMatrix$Composition,'\\+') + 1
selectIDs <- which(dataMatrix$SpeciesRichness == 2)
dataMatrix <- dataMatrix[selectIDs,]
dataMatrix$Level4 <- as.factor(paste(dataMatrix$Lat,dataMatrix$Lon))
dataMatrix$Level3 <- as.factor(paste(dataMatrix$Composition,dataMatrix$Age,dataMatrix$Density))
dataMatrix$Level2 <- as.factor(seq(1,nrow(dataMatrix)))
# Part 5.1: Collate data
dataMatrix$BubbleSize <- 0
Weight <- 1/sqrt(dataMatrix$Net_vi)
Breaks <- quantile(Weight,c(0.2,0.4,0.6,0.8,1))
selectIDs <- which(Weight < Breaks[1])
dataMatrix$BubbleSize <- 0.4
for(i in seq(2,length(Breaks))){
selectIDs <- which((Weight < Breaks[i])&(Weight >= Breaks[i-1]))
dataMatrix$BubbleSize[selectIDs] <- 0.4 + (i-1)*0.4
}
selectIDs <- which((dataMatrix$Net_yi <= quantile(dataMatrix$Net_yi,0.98))&(dataMatrix$Net_yi >= quantile(dataMatrix$Net_yi,0.02)))
newDataMatrix <- dataMatrix[selectIDs,c('Age','Density','Net_yi','BubbleSize')]
# Part 5.2: Fit
res_Net <- rma.mv(Net_yi,Net_vi,mods = ~Age+Age2-1,random = ~1|Level4/Level3/Level2,method = 'ML',data = dataMatrix)
res_Com <- rma.mv(Com_yi,Com_vi,mods = ~Age+Age2-1,random = ~1|Level4/Level3/Level2,method = 'ML',data = dataMatrix)
res_Sel <- rma.mv(Sel_yi,Sel_vi,mods = ~Age-1,random = ~1|Level4/Level3/Level2,method = 'ML',data = dataMatrix)
# Fit line Net
ageLineNet <- as.data.frame(matrix(data = 0,nrow = 100,ncol = 4))
colnames(ageLineNet) <- c('X','Y','Upper','Lower')
tempX <- seq(min(dataMatrix$Age),max(dataMatrix$Age),length.out = 100)
for(i in seq(1,length(tempX))){
ageLineNet[i,1] <- tempX[i]
tempResult <- predict.rma(res_Net,newmods = c(tempX[i],tempX[i]^2))
ageLineNet[i,2] <- as.numeric(tempResult$pred)
ageLineNet[i,3] <- as.numeric(tempResult$ci.ub)
ageLineNet[i,4] <- as.numeric(tempResult$ci.lb)
}
# Fit line Com
ageLineCom <- as.data.frame(matrix(data = 0,nrow = 100,ncol = 4))
colnames(ageLineCom) <- c('X','Y','Upper','Lower')
tempX <- seq(min(dataMatrix$Age),max(dataMatrix$Age),length.out = 100)
for(i in seq(1,length(tempX))){
ageLineCom[i,1] <- tempX[i]
tempResult <- predict.rma(res_Com,newmods = c(tempX[i],tempX[i]^2))
ageLineCom[i,2] <- as.numeric(tempResult$pred)
ageLineCom[i,3] <- as.numeric(tempResult$ci.ub)
ageLineCom[i,4] <- as.numeric(tempResult$ci.lb)
}
# Fit line Sel
ageLineSel <- as.data.frame(matrix(data = 0,nrow = 100,ncol = 4))
colnames(ageLineSel) <- c('X','Y','Upper','Lower')
tempX <- seq(min(dataMatrix$Age),max(dataMatrix$Age),length.out = 100)
for(i in seq(1,length(tempX))){
ageLineSel[i,1] <- tempX[i]
tempResult <- predict.rma(res_Sel,newmods = tempX[i])
ageLineSel[i,2] <- as.numeric(tempResult$pred)
ageLineSel[i,3] <- as.numeric(tempResult$ci.ub)
ageLineSel[i,4] <- as.numeric(tempResult$ci.lb)
}
# CI polygon Net
ageCIPolygonNet <- as.data.frame(matrix(data = 0,nrow = (2*nrow(ageLineNet)+1),ncol = 2))
colnames(ageCIPolygonNet) <- c('X','Y')
count <- 1
for(i in seq(1,nrow(ageLineNet))){
ageCIPolygonNet$X[count] <- ageLineNet$X[i]
ageCIPolygonNet$Y[count] <- ageLineNet$Upper[i]
count <- count + 1
}
for(i in seq(nrow(ageLineNet),1,-1)){
ageCIPolygonNet$X[count] <- ageLineNet$X[i]
ageCIPolygonNet$Y[count] <- ageLineNet$Lower[i]
count <- count + 1
}
ageCIPolygonNet$X[count] <- ageLineNet$X[1]
ageCIPolygonNet$Y[count] <- ageLineNet$Upper[1]
# CI polygon Com
ageCIPolygonCom <- as.data.frame(matrix(data = 0,nrow = (2*nrow(ageLineCom)+1),ncol = 2))
colnames(ageCIPolygonCom) <- c('X','Y')
count <- 1
for(i in seq(1,nrow(ageLineCom))){
ageCIPolygonCom$X[count] <- ageLineCom$X[i]
ageCIPolygonCom$Y[count] <- ageLineCom$Upper[i]
count <- count + 1
}
for(i in seq(nrow(ageLineCom),1,-1)){
ageCIPolygonCom$X[count] <- ageLineCom$X[i]
ageCIPolygonCom$Y[count] <- ageLineCom$Lower[i]
count <- count + 1
}
ageCIPolygonCom$X[count] <- ageLineCom$X[1]
ageCIPolygonCom$Y[count] <- ageLineCom$Upper[1]
# CI polygon Sel
ageCIPolygonSel <- as.data.frame(matrix(data = 0,nrow = (2*nrow(ageLineSel)+1),ncol = 2))
colnames(ageCIPolygonSel) <- c('X','Y')
count <- 1
for(i in seq(1,nrow(ageLineSel))){
ageCIPolygonSel$X[count] <- ageLineSel$X[i]
ageCIPolygonSel$Y[count] <- ageLineSel$Upper[i]
count <- count + 1
}
for(i in seq(nrow(ageLineSel),1,-1)){
ageCIPolygonSel$X[count] <- ageLineSel$X[i]
ageCIPolygonSel$Y[count] <- ageLineSel$Lower[i]
count <- count + 1
}
ageCIPolygonSel$X[count] <- ageLineSel$X[1]
ageCIPolygonSel$Y[count] <- ageLineSel$Upper[1]
# Part 5.3: Draw
fig_S8e <- ggplot()+
geom_point(newDataMatrix,mapping = aes(x = Age,y = Net_yi),
shape = 20,stroke = 0,color = '#666666',size = newDataMatrix$BubbleSize,alpha = 0.4)+
geom_hline(yintercept = 0,size = 0.3,color = '#000000',linetype = 'dashed')+
geom_line(data = ageLineSel,mapping = aes(x = X,y = Y),size = 0.5,color = CMYKtoRGB(0,0.38,0.96,0),linetype = 'dashed')+
geom_polygon(data = ageCIPolygonSel,mapping = aes(x = X,y = Y),size = 0.5,fill = CMYKtoRGB(0,0.38,0.96,0),alpha = 0.3)+
geom_line(data = ageLineCom,mapping = aes(x = X,y = Y),size = 0.5,color = CMYKtoRGB(0.82,0.2,0.93,0.24))+
geom_polygon(data = ageCIPolygonCom,mapping = aes(x = X,y = Y),size = 0.5,fill = CMYKtoRGB(0.82,0.2,0.93,0.24),alpha = 0.3)+
geom_line(data = ageLineNet,mapping = aes(x = X,y = Y),size = 0.5,color = CMYKtoRGB(0.84,0.67,0,0))+
geom_polygon(data = ageCIPolygonNet,mapping = aes(x = X,y = Y),size = 0.5,fill = CMYKtoRGB(0.84,0.67,0,0),alpha = 0.3)+
scale_x_continuous(breaks = seq(0,60,20),labels = c('0','20','40','60'))+
scale_y_continuous(limits = c(-0.4,0.4),breaks = seq(-0.4,0.4,0.2),labels = c('-0.4','-0.2','0','0.2','0.4'),expand = c(0,0))+
theme_custom()
##==== Part 5: DBH (Community) ====##
##==== Part 6: Biomass (Community) ====##
load('Data_Bio_Community.R')
dataMatrix$SpeciesRichness <- str_count(dataMatrix$Composition,'\\+') + 1
selectIDs <- which(dataMatrix$SpeciesRichness == 2)
dataMatrix <- dataMatrix[selectIDs,]
dataMatrix$Level4 <- as.factor(paste(dataMatrix$Lat,dataMatrix$Lon))
dataMatrix$Level3 <- as.factor(paste(dataMatrix$Composition,dataMatrix$Age,dataMatrix$Density))
dataMatrix$Level2 <- as.factor(seq(1,nrow(dataMatrix)))
# Part 6.1: Collate data
dataMatrix$BubbleSize <- 0
Weight <- 1/sqrt(dataMatrix$Net_vi)
Breaks <- quantile(Weight,c(0.2,0.4,0.6,0.8,1))
selectIDs <- which(Weight < Breaks[1])
dataMatrix$BubbleSize <- 0.4
for(i in seq(2,length(Breaks))){
selectIDs <- which((Weight < Breaks[i])&(Weight >= Breaks[i-1]))
dataMatrix$BubbleSize[selectIDs] <- 0.4 + (i-1)*0.4
}
selectIDs <- which((dataMatrix$Net_yi <= quantile(dataMatrix$Net_yi,0.98))&(dataMatrix$Net_yi >= quantile(dataMatrix$Net_yi,0.02)))
newDataMatrix <- dataMatrix[selectIDs,c('Age','Density','Net_yi','BubbleSize')]
# Part 6.2: Fit
res_Net <- rma.mv(Net_yi,Net_vi,mods = ~Age+Age2-1,random = ~1|Level4/Level3/Level2,method = 'ML',data = dataMatrix)
res_Com <- rma.mv(Com_yi,Com_vi,mods = ~Age+Age2-1,random = ~1|Level4/Level3/Level2,method = 'ML',data = dataMatrix)
res_Sel <- rma.mv(Sel_yi,Sel_vi,mods = ~Age-1,random = ~1|Level4/Level3/Level2,method = 'ML',data = dataMatrix)
# Fit line Net
ageLineNet <- as.data.frame(matrix(data = 0,nrow = 100,ncol = 4))
colnames(ageLineNet) <- c('X','Y','Upper','Lower')
tempX <- seq(min(dataMatrix$Age),max(dataMatrix$Age),length.out = 100)
for(i in seq(1,length(tempX))){
ageLineNet[i,1] <- tempX[i]
tempResult <- predict.rma(res_Net,newmods = c(tempX[i],tempX[i]^2))
ageLineNet[i,2] <- as.numeric(tempResult$pred)
ageLineNet[i,3] <- as.numeric(tempResult$ci.ub)
ageLineNet[i,4] <- as.numeric(tempResult$ci.lb)
}
# Fit line Com
ageLineCom <- as.data.frame(matrix(data = 0,nrow = 100,ncol = 4))
colnames(ageLineCom) <- c('X','Y','Upper','Lower')
tempX <- seq(min(dataMatrix$Age),max(dataMatrix$Age),length.out = 100)
for(i in seq(1,length(tempX))){
ageLineCom[i,1] <- tempX[i]
tempResult <- predict.rma(res_Com,newmods = c(tempX[i],tempX[i]^2))
ageLineCom[i,2] <- as.numeric(tempResult$pred)
ageLineCom[i,3] <- as.numeric(tempResult$ci.ub)
ageLineCom[i,4] <- as.numeric(tempResult$ci.lb)
}
# Fit line Sel
ageLineSel <- as.data.frame(matrix(data = 0,nrow = 100,ncol = 4))
colnames(ageLineSel) <- c('X','Y','Upper','Lower')
tempX <- seq(min(dataMatrix$Age),max(dataMatrix$Age),length.out = 100)
for(i in seq(1,length(tempX))){
ageLineSel[i,1] <- tempX[i]
tempResult <- predict.rma(res_Sel,newmods = tempX[i])
ageLineSel[i,2] <- as.numeric(tempResult$pred)
ageLineSel[i,3] <- as.numeric(tempResult$ci.ub)
ageLineSel[i,4] <- as.numeric(tempResult$ci.lb)
}
# CI polygon Net
ageCIPolygonNet <- as.data.frame(matrix(data = 0,nrow = (2*nrow(ageLineNet)+1),ncol = 2))
colnames(ageCIPolygonNet) <- c('X','Y')
count <- 1
for(i in seq(1,nrow(ageLineNet))){
ageCIPolygonNet$X[count] <- ageLineNet$X[i]
ageCIPolygonNet$Y[count] <- ageLineNet$Upper[i]
count <- count + 1
}
for(i in seq(nrow(ageLineNet),1,-1)){
ageCIPolygonNet$X[count] <- ageLineNet$X[i]
ageCIPolygonNet$Y[count] <- ageLineNet$Lower[i]
count <- count + 1
}
ageCIPolygonNet$X[count] <- ageLineNet$X[1]
ageCIPolygonNet$Y[count] <- ageLineNet$Upper[1]
# CI polygon Com
ageCIPolygonCom <- as.data.frame(matrix(data = 0,nrow = (2*nrow(ageLineCom)+1),ncol = 2))
colnames(ageCIPolygonCom) <- c('X','Y')
count <- 1
for(i in seq(1,nrow(ageLineCom))){
ageCIPolygonCom$X[count] <- ageLineCom$X[i]
ageCIPolygonCom$Y[count] <- ageLineCom$Upper[i]
count <- count + 1
}
for(i in seq(nrow(ageLineCom),1,-1)){
ageCIPolygonCom$X[count] <- ageLineCom$X[i]
ageCIPolygonCom$Y[count] <- ageLineCom$Lower[i]
count <- count + 1
}
ageCIPolygonCom$X[count] <- ageLineCom$X[1]
ageCIPolygonCom$Y[count] <- ageLineCom$Upper[1]
# CI polygon Sel
ageCIPolygonSel <- as.data.frame(matrix(data = 0,nrow = (2*nrow(ageLineSel)+1),ncol = 2))
colnames(ageCIPolygonSel) <- c('X','Y')
count <- 1
for(i in seq(1,nrow(ageLineSel))){
ageCIPolygonSel$X[count] <- ageLineSel$X[i]
ageCIPolygonSel$Y[count] <- ageLineSel$Upper[i]
count <- count + 1
}
for(i in seq(nrow(ageLineSel),1,-1)){
ageCIPolygonSel$X[count] <- ageLineSel$X[i]
ageCIPolygonSel$Y[count] <- ageLineSel$Lower[i]
count <- count + 1
}
ageCIPolygonSel$X[count] <- ageLineSel$X[1]
ageCIPolygonSel$Y[count] <- ageLineSel$Upper[1]
# Part 6.3: Draw
fig_S8f <- ggplot()+
geom_point(newDataMatrix,mapping = aes(x = Age,y = Net_yi),
shape = 20,stroke = 0,color = '#666666',size = newDataMatrix$BubbleSize,alpha = 0.4)+
geom_hline(yintercept = 0,size = 0.3,color = '#000000',linetype = 'dashed')+
geom_line(data = ageLineSel,mapping = aes(x = X,y = Y),size = 0.5,color = CMYKtoRGB(0,0.38,0.96,0),linetype = 'dashed')+
geom_polygon(data = ageCIPolygonSel,mapping = aes(x = X,y = Y),size = 0.5,fill = CMYKtoRGB(0,0.38,0.96,0),alpha = 0.3)+
geom_line(data = ageLineCom,mapping = aes(x = X,y = Y),size = 0.5,color = CMYKtoRGB(0.82,0.2,0.93,0.24))+
geom_polygon(data = ageCIPolygonCom,mapping = aes(x = X,y = Y),size = 0.5,fill = CMYKtoRGB(0.82,0.2,0.93,0.24),alpha = 0.3)+
geom_line(data = ageLineNet,mapping = aes(x = X,y = Y),size = 0.5,color = CMYKtoRGB(0.84,0.67,0,0))+
geom_polygon(data = ageCIPolygonNet,mapping = aes(x = X,y = Y),size = 0.5,fill = CMYKtoRGB(0.84,0.67,0,0),alpha = 0.3)+
scale_x_continuous(breaks = seq(0,60,20),labels = c('0','20','40','60'))+
scale_y_continuous(limits = c(-0.9,1.2),breaks = seq(-0.6,1.2,0.6),labels = c('-0.6','0','0.6','1.2'),expand = c(0,0))+
theme_custom()
##==== Part 6: Biomass (Community) ====##
##==== Part 7: Combine figures ====##
fig_S8 <- ggdraw()+
draw_plot(fig_S8a,x = 0,y = 0.5,width = 0.333,height = 0.5)+
draw_plot(fig_S8b,x = 0.334,y = 0.5,width = 0.333,height = 0.5)+
draw_plot(fig_S8c,x = 0.667,y = 0.5,width = 0.333,height = 0.5)+
draw_plot(fig_S8d,x = 0,y = 0,width = 0.333,height = 0.5)+
draw_plot(fig_S8e,x = 0.334,y = 0,width = 0.333,height = 0.5)+
draw_plot(fig_S8f,x = 0.667,y = 0,width = 0.333,height = 0.5)
outputFileName <- paste0(currentPath,'/fig_S8.pdf')
pdf(file = outputFileName,width = 4.65,height = 2.7,colormodel = 'cmyk')
print(fig_S8)
dev.off()
##==== Part 7: Combine figures ====##
