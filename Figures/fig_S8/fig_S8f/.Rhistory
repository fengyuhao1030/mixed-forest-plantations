drawMatrix$Num <- drawMatrix$Num/sum(drawMatrix$Num)
Fig_SR2 <- ggplot()+
geom_bar(data = drawMatrix,mapping = aes(x = '',y = Num,fill = SR),color = '#000000',size = 0.3,width = 1,stat = 'identity')+
scale_fill_manual(values = c(CMYKtoRGB(0,0.38,0.96,0),CMYKtoRGB(0.82,0.20,0.93,0.24),CMYKtoRGB(0.84,0.67,0,0)))+
coord_polar('y',start = 0)+
theme_custom()
pdf(file = 'C:\\Users\\erbao\\Desktop\\Figures_0109_Add\\Fig_SR_Num\\Fig_SR2.pdf',width = 1.3,height = 1.3,colormodel = 'cmyk')
print(Fig_SR2)
dev.off()
##==== Species ====##
rm(list = ls())
library(ggplot2)
##==== Function ====##
theme_custom <- function(){
myTheme <- theme(panel.background = element_blank(),
panel.grid = element_blank(),
legend.position = 'none',
plot.margin = margin(6,6,6,6),
plot.background = element_blank(),
axis.ticks = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_blank())
return(myTheme)
}
CMYKtoRGB <- function(C,M,Y,K){
Rc <- (1-C)*(1-K)
Gc <- (1-M)*(1-K)
Bc <- (1-Y)*(1-K)
R <- as.character(as.hexmode((ceiling(Rc*255))))
G <- as.character(as.hexmode((ceiling(Gc*255))))
B <- as.character(as.hexmode((ceiling(Bc*255))))
if(nchar(R) == 1){
R <- paste0('0',R)
}
if(nchar(G) == 1){
G <- paste0('0',G)
}
if(nchar(B) == 1){
B <- paste0('0',B)
}
RGBColor <- paste0('#',R,G,B)
return(RGBColor)
}
##==== Function ====##
dataMatrix_1 <- read.csv('C:\\Users\\erbao\\Desktop\\Figures_0109_Add\\Fig_SR_Num\\Species_Level\\SR_Summary.csv')
dataMatrix_2 <- read.csv('C:\\Users\\erbao\\Desktop\\Figures_0109_Add\\Fig_SR_Num\\Community_Level\\SR_Summary.csv')
##==== Species ====##
selectIDs_1 <- which(dataMatrix_1$SR == 2)
selectIDs_2 <- which((dataMatrix_1$SR == 3) | (dataMatrix_1$SR == 4))
selectIDs_3 <- which(dataMatrix_1$SR > 4)
tempSR <- c(2,3,5)
tempNum <- c(sum(dataMatrix_1$Num[selectIDs_3]),sum(dataMatrix_1$Num[selectIDs_2]),sum(dataMatrix_1$Num[selectIDs_1]))
drawMatrix <- data.frame(SR = tempSR,Num = tempNum)
drawMatrix$SR <- as.factor(drawMatrix$SR)
drawMatrix$Num <- drawMatrix$Num/sum(drawMatrix$Num)
Fig_SR1 <- ggplot()+
geom_bar(data = drawMatrix,mapping = aes(x = '',y = Num,fill = SR),color = '#000000',size = 0.3,width = 1,stat = 'identity')+
scale_fill_manual(values = c(CMYKtoRGB(0,0.38,0.96,0),CMYKtoRGB(0.82,0.20,0.93,0.24),CMYKtoRGB(0.84,0.67,0,0)))+
coord_polar('y',start = 0)+
theme_custom()
pdf(file = 'C:\\Users\\erbao\\Desktop\\Figures_0109_Add\\Fig_SR_Num\\Fig_SR1.pdf',width = 1.3,height = 1.3,colormodel = 'cmyk')
print(Fig_SR1)
dev.off()
##==== Species ====##
##==== Species ====##
selectIDs_1 <- which(dataMatrix_2$SR == 2)
selectIDs_2 <- which((dataMatrix_2$SR == 3) | (dataMatrix_2$SR == 4))
selectIDs_3 <- which(dataMatrix_2$SR > 4)
tempSR <- c(2,3,5)
tempNum <- c(sum(dataMatrix_2$Num[selectIDs_3]),sum(dataMatrix_2$Num[selectIDs_2]),sum(dataMatrix_2$Num[selectIDs_1]))
drawMatrix <- data.frame(SR = tempSR,Num = tempNum)
drawMatrix$SR <- as.factor(drawMatrix$SR)
drawMatrix$Num <- drawMatrix$Num/sum(drawMatrix$Num)
Fig_SR2 <- ggplot()+
geom_bar(data = drawMatrix,mapping = aes(x = '',y = Num,fill = SR),color = '#000000',size = 0.3,width = 1,stat = 'identity')+
scale_fill_manual(values = c(CMYKtoRGB(0,0.38,0.96,0),CMYKtoRGB(0.82,0.20,0.93,0.24),CMYKtoRGB(0.84,0.67,0,0)))+
coord_polar('y',start = 0)+
theme_custom()
pdf(file = 'C:\\Users\\erbao\\Desktop\\Figures_0109_Add\\Fig_SR_Num\\Fig_SR2.pdf',width = 1.3,height = 1.3,colormodel = 'cmyk')
print(Fig_SR2)
dev.off()
##==== Species ====##
View(dataMatrix_1)
View(dataMatrix_2)
uniqueSpeciesRichness <- unique(c(dataMatrix_1$SR,dataMatrix_2$SR))
rm(list = ls())
library(ggplot2)
##==== Function ====##
theme_custom <- function(){
myTheme <- theme(panel.background = element_blank(),
panel.grid = element_blank(),
legend.position = 'none',
plot.margin = margin(6,6,6,6),
plot.background = element_blank(),
axis.ticks = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_blank())
return(myTheme)
}
CMYKtoRGB <- function(C,M,Y,K){
Rc <- (1-C)*(1-K)
Gc <- (1-M)*(1-K)
Bc <- (1-Y)*(1-K)
R <- as.character(as.hexmode((ceiling(Rc*255))))
G <- as.character(as.hexmode((ceiling(Gc*255))))
B <- as.character(as.hexmode((ceiling(Bc*255))))
if(nchar(R) == 1){
R <- paste0('0',R)
}
if(nchar(G) == 1){
G <- paste0('0',G)
}
if(nchar(B) == 1){
B <- paste0('0',B)
}
RGBColor <- paste0('#',R,G,B)
return(RGBColor)
}
##==== Function ====##
dataMatrix_1 <- read.csv('C:\\Users\\erbao\\Desktop\\Figures_0109_Add\\Fig_SR_Num\\Species_Level\\SR_Summary.csv')
dataMatrix_2 <- read.csv('C:\\Users\\erbao\\Desktop\\Figures_0109_Add\\Fig_SR_Num\\Community_Level\\SR_Summary.csv')
##==== Species ====##
selectIDs_1 <- which(dataMatrix_1$SR == 2)
selectIDs_2 <- which((dataMatrix_1$SR == 3) | (dataMatrix_1$SR == 4))
selectIDs_3 <- which(dataMatrix_1$SR > 4)
tempSR <- c(2,3,5)
tempNum <- c(sum(dataMatrix_1$Num[selectIDs_3]),sum(dataMatrix_1$Num[selectIDs_2]),sum(dataMatrix_1$Num[selectIDs_1]))
drawMatrix <- data.frame(SR = tempSR,Num = tempNum)
drawMatrix$SR <- as.factor(drawMatrix$SR)
drawMatrix$Num <- drawMatrix$Num/sum(drawMatrix$Num)
Fig_SR1 <- ggplot()+
geom_bar(data = drawMatrix,mapping = aes(x = '',y = Num,fill = SR),color = '#000000',size = 0.3,width = 1,stat = 'identity')+
scale_fill_manual(values = c(CMYKtoRGB(0,0.38,0.96,0),CMYKtoRGB(0.82,0.20,0.93,0.24),CMYKtoRGB(0.84,0.67,0,0)))+
coord_polar('y',start = 0)+
theme_custom()
pdf(file = 'C:\\Users\\erbao\\Desktop\\Figures_0109_Add\\Fig_SR_Num\\Fig_SR1.pdf',width = 1.3,height = 1.3,colormodel = 'cmyk')
print(Fig_SR1)
dev.off()
##==== Species ====##
##==== Community ====##
selectIDs_1 <- which(dataMatrix_2$SR == 2)
selectIDs_2 <- which((dataMatrix_2$SR == 3) | (dataMatrix_2$SR == 4))
selectIDs_3 <- which(dataMatrix_2$SR > 4)
tempSR <- c(2,3,5)
tempNum <- c(sum(dataMatrix_2$Num[selectIDs_3]),sum(dataMatrix_2$Num[selectIDs_2]),sum(dataMatrix_2$Num[selectIDs_1]))
drawMatrix <- data.frame(SR = tempSR,Num = tempNum)
drawMatrix$SR <- as.factor(drawMatrix$SR)
drawMatrix$Num <- drawMatrix$Num/sum(drawMatrix$Num)
Fig_SR2 <- ggplot()+
geom_bar(data = drawMatrix,mapping = aes(x = '',y = Num,fill = SR),color = '#000000',size = 0.3,width = 1,stat = 'identity')+
scale_fill_manual(values = c(CMYKtoRGB(0,0.38,0.96,0),CMYKtoRGB(0.82,0.20,0.93,0.24),CMYKtoRGB(0.84,0.67,0,0)))+
coord_polar('y',start = 0)+
theme_custom()
pdf(file = 'C:\\Users\\erbao\\Desktop\\Figures_0109_Add\\Fig_SR_Num\\Fig_SR2.pdf',width = 1.3,height = 1.3,colormodel = 'cmyk')
print(Fig_SR2)
dev.off()
##==== Community ====##
##==== All ====##
dataMatrix_1 <- rbind(dataMatrix_1,dataMatrix_2)
uniqueSpeciesRichness <- unique(dataMatrix_1$SR)
dataMatrix_3 <- data.frame()
for(i in seq(1,length(uniqueSpeciesRichness))){
tempSR <- uniqueSpeciesRichness[i]
selectIDs <- which(dataMatrix_1$SR == tempSR)
tempNum <- sum(dataMatrix_1$Num[selectIDs])
dataMatrix_3 <- rbind(dataMatrix_3,data.frame(SR = tempSR,Num = tempNum))
}
##==== All ====##
View(dataMatrix_3)
rm(list = ls())
library(ggplot2)
##==== Function ====##
theme_custom <- function(){
myTheme <- theme(panel.background = element_blank(),
panel.grid = element_blank(),
legend.position = 'none',
plot.margin = margin(6,6,6,6),
plot.background = element_blank(),
axis.ticks = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_blank())
return(myTheme)
}
CMYKtoRGB <- function(C,M,Y,K){
Rc <- (1-C)*(1-K)
Gc <- (1-M)*(1-K)
Bc <- (1-Y)*(1-K)
R <- as.character(as.hexmode((ceiling(Rc*255))))
G <- as.character(as.hexmode((ceiling(Gc*255))))
B <- as.character(as.hexmode((ceiling(Bc*255))))
if(nchar(R) == 1){
R <- paste0('0',R)
}
if(nchar(G) == 1){
G <- paste0('0',G)
}
if(nchar(B) == 1){
B <- paste0('0',B)
}
RGBColor <- paste0('#',R,G,B)
return(RGBColor)
}
##==== Function ====##
dataMatrix_1 <- read.csv('C:\\Users\\erbao\\Desktop\\Figures_0109_Add\\Fig_SR_Num\\Species_Level\\SR_Summary.csv')
dataMatrix_2 <- read.csv('C:\\Users\\erbao\\Desktop\\Figures_0109_Add\\Fig_SR_Num\\Community_Level\\SR_Summary.csv')
##==== Species ====##
selectIDs_1 <- which(dataMatrix_1$SR == 2)
selectIDs_2 <- which((dataMatrix_1$SR == 3) | (dataMatrix_1$SR == 4))
selectIDs_3 <- which(dataMatrix_1$SR > 4)
tempSR <- c(2,3,5)
tempNum <- c(sum(dataMatrix_1$Num[selectIDs_3]),sum(dataMatrix_1$Num[selectIDs_2]),sum(dataMatrix_1$Num[selectIDs_1]))
drawMatrix <- data.frame(SR = tempSR,Num = tempNum)
drawMatrix$SR <- as.factor(drawMatrix$SR)
drawMatrix$Num <- drawMatrix$Num/sum(drawMatrix$Num)
Fig_SR1 <- ggplot()+
geom_bar(data = drawMatrix,mapping = aes(x = '',y = Num,fill = SR),color = '#000000',size = 0.3,width = 1,stat = 'identity')+
scale_fill_manual(values = c(CMYKtoRGB(0,0.38,0.96,0),CMYKtoRGB(0.82,0.20,0.93,0.24),CMYKtoRGB(0.84,0.67,0,0)))+
coord_polar('y',start = 0)+
theme_custom()
pdf(file = 'C:\\Users\\erbao\\Desktop\\Figures_0109_Add\\Fig_SR_Num\\Fig_SR1.pdf',width = 1.3,height = 1.3,colormodel = 'cmyk')
print(Fig_SR1)
dev.off()
##==== Species ====##
##==== Community ====##
selectIDs_1 <- which(dataMatrix_2$SR == 2)
selectIDs_2 <- which((dataMatrix_2$SR == 3) | (dataMatrix_2$SR == 4))
selectIDs_3 <- which(dataMatrix_2$SR > 4)
tempSR <- c(2,3,5)
tempNum <- c(sum(dataMatrix_2$Num[selectIDs_3]),sum(dataMatrix_2$Num[selectIDs_2]),sum(dataMatrix_2$Num[selectIDs_1]))
drawMatrix <- data.frame(SR = tempSR,Num = tempNum)
drawMatrix$SR <- as.factor(drawMatrix$SR)
drawMatrix$Num <- drawMatrix$Num/sum(drawMatrix$Num)
Fig_SR2 <- ggplot()+
geom_bar(data = drawMatrix,mapping = aes(x = '',y = Num,fill = SR),color = '#000000',size = 0.3,width = 1,stat = 'identity')+
scale_fill_manual(values = c(CMYKtoRGB(0,0.38,0.96,0),CMYKtoRGB(0.82,0.20,0.93,0.24),CMYKtoRGB(0.84,0.67,0,0)))+
coord_polar('y',start = 0)+
theme_custom()
pdf(file = 'C:\\Users\\erbao\\Desktop\\Figures_0109_Add\\Fig_SR_Num\\Fig_SR2.pdf',width = 1.3,height = 1.3,colormodel = 'cmyk')
print(Fig_SR2)
dev.off()
##==== Community ====##
##==== All ====##
dataMatrix_1 <- rbind(dataMatrix_1,dataMatrix_2)
uniqueSpeciesRichness <- unique(dataMatrix_1$SR)
dataMatrix_3 <- data.frame()
for(i in seq(1,length(uniqueSpeciesRichness))){
tempSR <- uniqueSpeciesRichness[i]
selectIDs <- which(dataMatrix_1$SR == tempSR)
tempNum <- sum(dataMatrix_1$Num[selectIDs])
dataMatrix_3 <- rbind(dataMatrix_3,data.frame(SR = tempSR,Num = tempNum))
}
selectIDs_1 <- which(dataMatrix_3$SR == 2)
selectIDs_2 <- which((dataMatrix_3$SR == 3) | (dataMatrix_3$SR == 4))
selectIDs_3 <- which(dataMatrix_3$SR > 4)
tempSR <- c(2,3,5)
tempNum <- c(sum(dataMatrix_3$Num[selectIDs_3]),sum(dataMatrix_3$Num[selectIDs_2]),sum(dataMatrix_3$Num[selectIDs_1]))
drawMatrix <- data.frame(SR = tempSR,Num = tempNum)
drawMatrix$SR <- as.factor(drawMatrix$SR)
drawMatrix$Num <- drawMatrix$Num/sum(drawMatrix$Num)
Fig_SR3 <- ggplot()+
geom_bar(data = drawMatrix,mapping = aes(x = '',y = Num,fill = SR),color = '#000000',size = 0.3,width = 1,stat = 'identity')+
scale_fill_manual(values = c(CMYKtoRGB(0,0.38,0.96,0),CMYKtoRGB(0.82,0.20,0.93,0.24),CMYKtoRGB(0.84,0.67,0,0)))+
coord_polar('y',start = 0)+
theme_custom()
pdf(file = 'C:\\Users\\erbao\\Desktop\\Figures_0109_Add\\Fig_SR_Num\\Fig_SR3.pdf',width = 1.3,height = 1.3,colormodel = 'cmyk')
print(Fig_SR3)
dev.off()
##==== All ====##
load('C:\\Users\\erbao\\Desktop\\Figures_0110\\Fig_1_Wang\\Species_Level\\BioData.R')
View(BioData)
length(which(BioData$yi >= 0))
929-710
0.0144300310135873/0.0003820252318486
0.0144300310135873/0.0003820252318486/2
0.016772546851887/0.000469193948901626/2
0.0498640575027797/0.00144829408971868/2
0.0454669481309386/0.00131918167272236/2
0.000123436110795966/2.94834980094697e-08/2
9.81671343807241e-05/2.11999371168736e-08/2
0.00023791499085984/5.0527834339427e-08/2
200/339
286/339
438/(438+157)
439/(439+178)
library(metafor)
1199/(1199+510)
1236/(1236+530)
710/(710/219)
710/(710+219)
exp(0.06)-1
exp(0.047)-1
exp(0.074)-1
exp(0.065)-1
exp(0.05)-1
exp(0.079)-1
exp(0.21)-1
exp(0.173)-1
exp(0.247)-1
439/(439+178)
438/(438+157)
286/339
10^(0.0759093875033453/0.0133542923203582/2)
10^(0.909357112405266/0.133854055575612/2)
10^(0.820994218357016/0.119882792239584/2)
10^(2.48493134253355/0.349078856836792/2)
10^(2.27886654831319/0.335132850933612/2)
X <- c(497,588,564,549)
sd(X)
38.50974*2500*0.307
Y <- c(446,525,506,492)
sd(Y)
33.66873*2500*0.307
X <- c(2965,3143,3320)
mean(X)
sd(X)
Y <- c(3016,3214,3548)
mean(Y)
3259/0.5
rm(list = ls())
library(nlme)
setwd('C:\\Users\\erbao\\Desktop\\Analysis_1229\\5_Add_Analysis\\2_Independent traits\\Species_Level')
##==== Height ====##
load('Data_Height.R')
dataMatrix$Level4 <- as.factor(paste(dataMatrix$Lat,dataMatrix$Lon))
dataMatrix$Level3 <- as.factor(paste(dataMatrix$Composition,dataMatrix$Age,dataMatrix$Density))
dataMatrix$Level2 <- as.factor(dataMatrix$Species)
dataMatrix$Level1 <- as.factor(seq(1,nrow(dataMatrix)))
res <- lme(yi~NitrogenClass+NeedleleafClass+EvergreenClass,random = ~1|Level4/Level3/Level2/Level1,weights = varFixed(~ vi),method = 'ML',control = lmeControl(sigma = 1),data = dataMatrix)
res_1 <- lme(yi~NeedleleafClass+EvergreenClass,random = ~1|Level4/Level3/Level2/Level1,weights = varFixed(~ vi),method = 'ML',control = lmeControl(sigma = 1),data = dataMatrix)
res_2 <- lme(yi~NitrogenClass+EvergreenClass,random = ~1|Level4/Level3/Level2/Level1,weights = varFixed(~ vi),method = 'ML',control = lmeControl(sigma = 1),data = dataMatrix)
res_3 <- lme(yi~NitrogenClass+NeedleleafClass,random = ~1|Level4/Level3/Level2/Level1,weights = varFixed(~ vi),method = 'ML',control = lmeControl(sigma = 1),data = dataMatrix)
modelCompare_1 <- anova(res,res_1)
modelCompare_2 <- anova(res,res_2)
modelCompare_3 <- anova(res,res_3)
##==== Height ====##
rm(list = ls())
library(rstudioapi)
library(stringr)
library(multcomp)
library(metafor)
library(ggplot2)
currentPath <- getSourceEditorContext()$path
charLocations <- gregexpr('/',currentPath)[[1]]
currentPath <- substring(currentPath,1,charLocations[length(charLocations)]-1)
setwd(currentPath)
##==== Function ====##
theme_custom <- function(){
myTheme <- theme(panel.background = element_rect(fill = 'white',color = 'black',size = 0.5),
panel.grid = element_blank(),
legend.position = 'none',
plot.margin = margin(6,6,6,6),
plot.background = element_blank(),
axis.ticks = element_line(size = 0.3),
axis.ticks.length = unit(-0.15,'lines'),
axis.title.y = element_blank(),
axis.title.x = element_text(size = 7,margin = margin(2,0,0,0),face = 'bold'),
axis.text.y = element_text(size = 7,margin = margin(0,3,0,0),color = '#000000'),
axis.text.x = element_text(size = 7,margin = margin(4,0,0,0),color = '#000000'))
return(myTheme)
}
CMYKtoRGB <- function(C,M,Y,K){
Rc <- (1-C)*(1-K)
Gc <- (1-M)*(1-K)
Bc <- (1-Y)*(1-K)
R <- as.character(as.hexmode((ceiling(Rc*255))))
G <- as.character(as.hexmode((ceiling(Gc*255))))
B <- as.character(as.hexmode((ceiling(Bc*255))))
if(nchar(R) == 1){
R <- paste0('0',R)
}
if(nchar(G) == 1){
G <- paste0('0',G)
}
if(nchar(B) == 1){
B <- paste0('0',B)
}
RGBColor <- paste0('#',R,G,B)
return(RGBColor)
}
##==== Function ====##
load('Data_Bio.R')
dataMatrix$SpeciesRichness <- str_count(dataMatrix$Composition,'\\+') + 1
selectIDs <- which(dataMatrix$SpeciesRichness == 2)
dataMatrix <- dataMatrix[selectIDs,]
##==== Part 1: Collate data ====##
dataMatrix$BubbleSize <- 0
Weight <- 1/sqrt(dataMatrix$Net_vi)
Breaks <- quantile(Weight,c(0.2,0.4,0.6,0.8,1))
selectIDs <- which(Weight < Breaks[1])
dataMatrix$BubbleSize <- 0.4
for(i in seq(2,length(Breaks))){
selectIDs <- which((Weight < Breaks[i])&(Weight >= Breaks[i-1]))
dataMatrix$BubbleSize[selectIDs] <- 0.4 + (i-1)*0.4
}
selectIDs <- which((dataMatrix$Net_yi <= quantile(dataMatrix$Net_yi,0.98))&(dataMatrix$Net_yi >= quantile(dataMatrix$Net_yi,0.02)))
newDataMatrix <- dataMatrix[selectIDs,c('Age','Density','Net_yi','BubbleSize')]
dataMatrix$Level4 <- as.factor(paste(dataMatrix$Lat,dataMatrix$Lon))
dataMatrix$Level3 <- as.factor(paste(dataMatrix$Composition,dataMatrix$Age,dataMatrix$Density))
dataMatrix$Level2 <- as.factor(seq(1,nrow(dataMatrix)))
##==== Part 1: Collate data ====##
##==== Part 2: Fit age ====##
res_Net <- rma.mv(Net_yi,Net_vi,mods = ~Age+Age2-1,random = ~1|Level4/Level3/Level2,method = 'ML',data = dataMatrix)
res_Com <- rma.mv(Com_yi,Com_vi,mods = ~Age+Age2-1,random = ~1|Level4/Level3/Level2,method = 'ML',data = dataMatrix)
res_Sel <- rma.mv(Sel_yi,Sel_vi,mods = ~Age-1,random = ~1|Level4/Level3/Level2,method = 'ML',data = dataMatrix)
# Fit line Net
ageLineNet <- as.data.frame(matrix(data = 0,nrow = 100,ncol = 4))
colnames(ageLineNet) <- c('X','Y','Upper','Lower')
tempX <- seq(min(dataMatrix$Age),max(dataMatrix$Age),length.out = 100)
for(i in seq(1,length(tempX))){
ageLineNet[i,1] <- tempX[i]
tempResult <- predict.rma(res_Net,newmods = c(tempX[i],tempX[i]^2))
ageLineNet[i,2] <- as.numeric(tempResult$pred)
ageLineNet[i,3] <- as.numeric(tempResult$ci.ub)
ageLineNet[i,4] <- as.numeric(tempResult$ci.lb)
}
# Fit line Com
ageLineCom <- as.data.frame(matrix(data = 0,nrow = 100,ncol = 4))
colnames(ageLineCom) <- c('X','Y','Upper','Lower')
tempX <- seq(min(dataMatrix$Age),max(dataMatrix$Age),length.out = 100)
for(i in seq(1,length(tempX))){
ageLineCom[i,1] <- tempX[i]
tempResult <- predict.rma(res_Com,newmods = c(tempX[i],tempX[i]^2))
ageLineCom[i,2] <- as.numeric(tempResult$pred)
ageLineCom[i,3] <- as.numeric(tempResult$ci.ub)
ageLineCom[i,4] <- as.numeric(tempResult$ci.lb)
}
# Fit line Sel
ageLineSel <- as.data.frame(matrix(data = 0,nrow = 100,ncol = 4))
colnames(ageLineSel) <- c('X','Y','Upper','Lower')
tempX <- seq(min(dataMatrix$Age),max(dataMatrix$Age),length.out = 100)
for(i in seq(1,length(tempX))){
ageLineSel[i,1] <- tempX[i]
tempResult <- predict.rma(res_Sel,newmods = tempX[i])
ageLineSel[i,2] <- as.numeric(tempResult$pred)
ageLineSel[i,3] <- as.numeric(tempResult$ci.ub)
ageLineSel[i,4] <- as.numeric(tempResult$ci.lb)
}
# CI polygon Net
ageCIPolygonNet <- as.data.frame(matrix(data = 0,nrow = (2*nrow(ageLineNet)+1),ncol = 2))
colnames(ageCIPolygonNet) <- c('X','Y')
count <- 1
for(i in seq(1,nrow(ageLineNet))){
ageCIPolygonNet$X[count] <- ageLineNet$X[i]
ageCIPolygonNet$Y[count] <- ageLineNet$Upper[i]
count <- count + 1
}
for(i in seq(nrow(ageLineNet),1,-1)){
ageCIPolygonNet$X[count] <- ageLineNet$X[i]
ageCIPolygonNet$Y[count] <- ageLineNet$Lower[i]
count <- count + 1
}
ageCIPolygonNet$X[count] <- ageLineNet$X[1]
ageCIPolygonNet$Y[count] <- ageLineNet$Upper[1]
# CI polygon Com
ageCIPolygonCom <- as.data.frame(matrix(data = 0,nrow = (2*nrow(ageLineCom)+1),ncol = 2))
colnames(ageCIPolygonCom) <- c('X','Y')
count <- 1
for(i in seq(1,nrow(ageLineCom))){
ageCIPolygonCom$X[count] <- ageLineCom$X[i]
ageCIPolygonCom$Y[count] <- ageLineCom$Upper[i]
count <- count + 1
}
for(i in seq(nrow(ageLineCom),1,-1)){
ageCIPolygonCom$X[count] <- ageLineCom$X[i]
ageCIPolygonCom$Y[count] <- ageLineCom$Lower[i]
count <- count + 1
}
ageCIPolygonCom$X[count] <- ageLineCom$X[1]
ageCIPolygonCom$Y[count] <- ageLineCom$Upper[1]
# CI polygon Sel
ageCIPolygonSel <- as.data.frame(matrix(data = 0,nrow = (2*nrow(ageLineSel)+1),ncol = 2))
colnames(ageCIPolygonSel) <- c('X','Y')
count <- 1
for(i in seq(1,nrow(ageLineSel))){
ageCIPolygonSel$X[count] <- ageLineSel$X[i]
ageCIPolygonSel$Y[count] <- ageLineSel$Upper[i]
count <- count + 1
}
for(i in seq(nrow(ageLineSel),1,-1)){
ageCIPolygonSel$X[count] <- ageLineSel$X[i]
ageCIPolygonSel$Y[count] <- ageLineSel$Lower[i]
count <- count + 1
}
ageCIPolygonSel$X[count] <- ageLineSel$X[1]
ageCIPolygonSel$Y[count] <- ageLineSel$Upper[1]
##==== Part 2: Fit age ====##
##==== Part 3: Draw ====##
fig_S11f <- ggplot()+
geom_point(newDataMatrix,mapping = aes(x = Age,y = Net_yi),
shape = 20,stroke = 0,color = '#666666',size = newDataMatrix$BubbleSize,alpha = 0.4)+
geom_hline(yintercept = 0,size = 0.3,color = '#000000',linetype = 'dashed')+
geom_line(data = ageLineSel,mapping = aes(x = X,y = Y),size = 0.5,color = CMYKtoRGB(0,0.38,0.96,0),linetype = 'dashed')+
geom_polygon(data = ageCIPolygonSel,mapping = aes(x = X,y = Y),size = 0.5,fill = CMYKtoRGB(0,0.38,0.96,0),alpha = 0.3)+
geom_line(data = ageLineCom,mapping = aes(x = X,y = Y),size = 0.5,color = CMYKtoRGB(0.82,0.2,0.93,0.24))+
geom_polygon(data = ageCIPolygonCom,mapping = aes(x = X,y = Y),size = 0.5,fill = CMYKtoRGB(0.82,0.2,0.93,0.24),alpha = 0.3)+
geom_line(data = ageLineNet,mapping = aes(x = X,y = Y),size = 0.5,color = CMYKtoRGB(0.84,0.67,0,0))+
geom_polygon(data = ageCIPolygonNet,mapping = aes(x = X,y = Y),size = 0.5,fill = CMYKtoRGB(0.84,0.67,0,0),alpha = 0.3)+
scale_x_continuous(breaks = seq(0,60,20),labels = c('0','20','40','60'))+
scale_y_continuous(limits = c(-0.9,1.2),breaks = seq(-0.6,1.2,0.6),labels = c('-0.6','0','0.6','1.2'),expand = c(0,0))+
xlab('Age')+
theme_custom()
outputFileName <- paste0(currentPath,'/fig_S11f.pdf')
pdf(file = outputFileName,width = 1.55,height = 1.46,colormodel = 'cmyk')
print(fig_S11f)
dev.off()
##==== Part 3: Draw ====##
